<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Chino Soliard</title><link>http://chinosoliard.github.io/</link><description></description><atom:link href="feeds//feeds/rss/feed.xml" rel="self"></atom:link><lastBuildDate>Mon, 13 Jun 2016 14:00:00 -0300</lastBuildDate><item><title>AndSec 2016 [Reporte]</title><link>http://chinosoliard.github.io/blog/2016/jun/andsec-2016-report-es.html</link><description>&lt;p&gt;El evento tuvo lugar en Auditorio Buenos Aires, en el salón del edificio Buenos Aires Design, ocupó 3 ambientes, uno para las charlas primarias, otra para charlas secundarias o workshops, y otro ambiente donde había talleres de armado de antenas, supervivencias, opentalks… y barra libre!&lt;br /&gt;
Los organizadores del evento se preocuparon realmente por todo, el hotel en donde nos alojamos estaba bastante cerca del lugar del evento, y gestionaron de manera fabulosa las reuniones post-evento. Me agradó mucho reencontrarme con gente con la que compartí eventos previos.&lt;/p&gt;
&lt;p&gt;Nunca pensé que un workshop de SELinux iba a tener tanta audiencia, y nos sentimos muy bien cuando la gente empezó a hacer preguntas.  &lt;/p&gt;
&lt;p&gt;El sábado 4 dimos una parte más teórica, explicando de donde salió, que es, que no es, el funcionamiento y los términos importantes.
Cabe aclarar que, por cuestiones de tiempo, y la falta de internet en mi casa, no pudimos terminar del todo la presentación, pero dimos un workshop que cubrió todo, inclusive (por arriba) MLS, usando presentaciones que dimos en otros eventos.  &lt;/p&gt;
&lt;p&gt;El domingo 5 decidimos dar la parte práctica, preparando buenos ejemplos para mostrar como SELinux protege el sistema (No sin antes repasar la teoría para refrescar las cabezas o para ayudar a los que no habían ido el día anterior).&lt;br /&gt;
Los ejemplos fueron: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;con Samba:&lt;/strong&gt; creando archivo con root en /root y moviéndolo a un path compartido vía smb.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;con Apache:&lt;/strong&gt; Leandro Poli, del LUG Paraná, nos preparó un script php que listaba /dev y /etc, y así mostramos que puede prevenir SELinux.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Con ambos ejemplos, mostramos la solución de problemas de etiquetas, mostramos booleans, y mostramos lectura de logs.  &lt;/p&gt;
&lt;p&gt;Personalmente, quedé muy conforme con las asistencias al workshop, con las preguntas, con los ejemplos en vivo, y no puedo negar que aprendí muchísimo SELinux cuando preparábamos la práctica.  &lt;/p&gt;
&lt;p&gt;Quiero agradecer:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;strong&gt;Fedora Project&lt;/strong&gt;, a los &lt;strong&gt;organizadores de AndSec&lt;/strong&gt; por permitirnos y ayudarnos a asistir y por darnos lugar para el workshop.  &lt;/li&gt;
&lt;li&gt;a mi amigazo &lt;strong&gt;Rino Rondan&lt;/strong&gt;, que siempre me acompaña y me ayuda con todo. Un groso!  &lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;Leandro Poli&lt;/strong&gt;, que viajó desde Paraná conmigo, por el aguante, por el script php, y por darnos una mano en lo que pudiera. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Realmente &lt;a href="http://www.andsec.org" target="_blank"&gt;AndSec&lt;/a&gt; es un evento para aprovechar, los talleres de antena y supervivencia estuvieron muy buenos, al igual que el simulador de drones (y la barra libre :-P), para la próxima edición, si podes, anda, no la vas a pasar mal.&lt;/p&gt;
&lt;p&gt;Próximamente publicaremos el Workshop de SELinux, tanto la presentación como los scripts y pasos para la práctica. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Mon, 13 Jun 2016 14:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2016-06-13:blog/2016/jun/andsec-2016-report-es.html</guid><category>Fedora</category><category>SELinux</category><category>CABA</category><category>event</category><category>AndSec</category></item><item><title>FLISoL 2016 Paraná [Reporte]</title><link>http://chinosoliard.github.io/blog/2016/may/flisol-2016-parana-report-es.html</link><description>&lt;p&gt;Debo admitir que tenía desconfianza en realizar el evento en el lugar elegido, pero finalmente, Leandro me tapó la boca.&lt;br /&gt;
Leandro estudia Bioinformática en la facultad en donde realizamos el evento, y se dió cuenta que había mucha gente a la que le interesaba el software libre pero que no tenía como "despegar". Aprovechó esa situación para poder hacer un evento con aproximadamente &lt;strong&gt;160 asistentes&lt;/strong&gt; (Los cuales hubo que hecharlos formalmente cuando nos habíamos excedido en el horario, si no, se quedaban).&lt;br /&gt;
En cuestión, voy a hacer un resumen de todo, como casi siempre hago...  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Asistentes:&lt;/strong&gt;&lt;br /&gt;
    Como dije anteriormente, mas o menos asistieron 160 personas, con certeza podemos decir que simultaneamente, el promedio de asistentes dentro de la sala fue de 50 personas. Hubo mucho interes, muchas preguntas.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalaciones:&lt;/strong&gt;&lt;br /&gt;
    Hubo muchas instalaciones, según algunos registros, hubo:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 instalación de Debian  &lt;/li&gt;
&lt;li&gt;2 instalaciones de Xubuntu&lt;/li&gt;
&lt;li&gt;1 instalación de Antergos&lt;/li&gt;
&lt;li&gt;1 instalación de Mint&lt;/li&gt;
&lt;li&gt;1 instalación de Puppy Linux&lt;br /&gt;
Hubo, además, reparaciones y configuraciones de software.&lt;br /&gt;
Tambien, se entregaron y grabaron diversos medios de instalación.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Charlas:&lt;/strong&gt;
    Un cronograma fuera de lo común, con temáticas relacionadas a la bioinformática.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;La Bioinformatica nació para ser libre - Silvana Bulatovich  &lt;/li&gt;
&lt;li&gt;Impresión 3D de modelos a partir de tomografía - Albano Peñalva  &lt;/li&gt;
&lt;li&gt;Ciencia libre - Agustín Montagna  &lt;/li&gt;
&lt;li&gt;Licencias libres - Gugler  &lt;/li&gt;
&lt;li&gt;Arquitectura de IoT – Franco Rabaglia  &lt;/li&gt;
&lt;li&gt;Computadora Industrial Abierta Argentina - Eduardo "Paco" Filomena  &lt;/li&gt;
&lt;li&gt;Migración a GNU / Linux - Roberto Ronconi  &lt;/li&gt;
&lt;li&gt;No toca botón: Colaborando sin códigos - Leandro Poli  &lt;/li&gt;
&lt;li&gt;Shiba Inu: Instalación en tiempo Real – José Luis Perez  &lt;/li&gt;
&lt;li&gt;Biología sintética y cultura abierta – Gerardo Schneider  &lt;/li&gt;
&lt;li&gt;Esperanto por la libera programo erao (Esperanto para la era del software libre) - Maximiliano Fernández  &lt;/li&gt;
&lt;li&gt;Tryton ERP + GNU/Health – Francisco Arata  &lt;/li&gt;
&lt;li&gt;Hackers y samurais - Gustavo Courault  &lt;/li&gt;
&lt;li&gt;Kicad – Gonzalo Cuenca  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;El momento atípico:&lt;/strong&gt;&lt;br /&gt;
    Como todos los años, algo raro pasa... Éste año, fue, para mi, bastante peculiar... &lt;strong&gt;ME CENSURARON&lt;/strong&gt;&lt;br /&gt;
    Hubo un malentendido, ya nos habíamos excedido demasiado del tiempo estipulado, y, en broma, le dije a Leandro que yo no daba la charla... La broma salió mal, justo terminaba de dar su charla el disertante anterior, y Leandro, por micrófono, dijo que el evento concluía. La gente se levantó y se empezó a ir, y ya no hubo marcha atrás.&lt;br /&gt;
    Que conste que no estoy enojado, fue sólo un malentendido, y por culpa mía.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Mon, 02 May 2016 22:07:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2016-05-02:blog/2016/may/flisol-2016-parana-report-es.html</guid><category>Fedora</category><category>FLISOL</category><category>GNU/Linux</category><category>LugParana</category><category>Paraná</category><category>event</category></item><item><title>Migrando a Pelican</title><link>http://chinosoliard.github.io/blog/2016/abr/moving-to-pelican-es.html</link><description>&lt;p&gt;Solía usar &lt;a href="https://es.wordpress.org/"&gt;WordPress&lt;/a&gt; como CMS para hacer blogs, del cual no me puedo quejar, ya que anda demasiado bien; El "problema" es que se necesita un alojamiento web que tenga base de datos, entonces, estaba ocupando uno de mis gears de &lt;a href="http://www.openshift.com"&gt;OpenShift&lt;/a&gt; para alojar mi sitio web personal. Leí un articulo sobre pelican, y decidí probarlo.  &lt;/p&gt;
&lt;p&gt;Pelican usa Jinja, lo que permite que podamos usar y customizar diferentes "themes"; De hecho, éste template que hice (el que estoy usando) pueden descargarlo y usarlo en su proyecto.&lt;/p&gt;
&lt;p&gt;Ahora me queda solucionar algunas cositas con el theme (por ejemplo, el tagcloud, y algunos widgets), y después tengo que buscar un plugin para hacer galerias de fotos. &lt;/p&gt;
&lt;p&gt;Si quieren probarlo y necesitan ayuda, avisen ;-)&lt;/p&gt;
&lt;p&gt;Saludos!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Thu, 14 Apr 2016 14:20:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2016-04-14:blog/2016/abr/moving-to-pelican-es.html</guid><category>Pelican</category><category>web</category><category>GNU/Linux</category><category>Project</category><category>Python</category></item><item><title>FUDCon Cordoba 2015 [Reporte]</title><link>http://chinosoliard.github.io/blog/2015/sep/fudcon-cordoba-2015-report-es.html</link><description>&lt;p&gt;&lt;img alt="fedora" src="/images/static/fedora-150.png" class="alignleft"&gt;No quiero abundar el post de contenido de las charlas, además de que tengo que admitir que no pude prestar atención en todas ya que estaba terminando mi presentación. Si puedo decir que en las que estuve prestando atención me gustaron mucho, por ejemplo, la de Asterisk de Jared Smith, la de Flask de Eduardo Echeverria (que me hizo tener ganas de volver a programar) y la de Valentín Basel y su impresora 3D (¿Quien no tiene ganas de tener una en su casa?).&lt;br /&gt;
&lt;a href="/images/article/2015/09/fudcon-people.png"&gt;&lt;img alt="fedora-people" src="/images/article/2015/09/fudcon-people.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="friends" src="https://fedoraproject.org/w/uploads/4/4d/4Foundations-friends100px.png" class="alignright"&gt;Es el primer FUDCon al que voy, y es el primer evento en el que me encuentro con gente de otros países y con otras culturas; Fueron 4/5 días compartiendo con gente con mis mismos intereses, hablando de todo. Con casi todos tenía solamente contacto vía internet, y luego del primer abrazo, pareciera que eramos amigos desde hace tiempo.  &lt;/p&gt;
&lt;p&gt;Compartir comidas, charlas y mucha cerveza, con los demás asistentes, hizo que cuando me tuviera que despedir, se me cayeran un par de lagrimas. Ya volviéndome a mi casa, me enteré que ya tiene nombre lo que se siente después del FUDCon: “Depresión post-fudcon”. Hoy, espero con ansias la próxima posibilidad de verlos de nuevo.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Algunas situaciones épicas&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Dudo si FUDCon hubiese sido lo mismo sin algunas presencias, como dije, es el primero al que voy, pero algunas situaciones solo se generan por ciertas personas.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Black Force Domain&lt;/strong&gt;&lt;img alt="blackforcedomain" src="/images/article/2015/09/blackforcedomain.png" class="alignright"&gt;
  Me reí mucho con Leonardo Vaz y su “Black Force Domain”, el cual nos hizo cantar a casi todos, y fue cambiando de acuerdo a los sucesos del momento.&lt;br /&gt;
  De tanto bromear, Wolnei creo un diseño al estilo badge de Fedora.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;El “Tren de las Sierras” y Cosquín&lt;/strong&gt;&lt;br /&gt;
  Rino Rondan nos llevó el domingo a Cosquín en tren, en un viaje de 2 horas pasando entre medio de las sierras de Córdoba. Fue la primera vez que anduve en tren, realmente una experiencia muy agradable. Muchísimas gracias a Rino, mi gran amigo dentro de la comunidad, por hacernos de guía y sacarnos a pasear.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;El partido de fútbol&lt;/strong&gt;&lt;br /&gt;
  Nunca me voy a olvidar de lo que me dijeron hace ya unos años: “Chino, tenés menos patada que una pila”; Así y todo, jugué un partido de fútbol después de unos cuantos años de casi no ejercer actividad física (y hasta hice un gol :-P). Tengo que admitir que los brasileros son muy buenos jugando al fútbol.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Remy, el beatboxer&lt;/strong&gt;&lt;br /&gt;
  Remy sorprendió a todos en la última cena, cuando los artistas que estaban tocando folclore, cedieron el micrófono y comenzó a hacer beatbox con muchísima clase.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Conclusión&lt;/strong&gt;&lt;br /&gt;
FUDCon fue más que un evento para mí, conocer personalmente y hacerme tan amigos de los demás colaboradores, me incentivó a interesarme más en diversas áreas del proyecto.  &lt;/p&gt;
&lt;p&gt;El sábado, en el meeting presencial que tuvimos, hubo varias ideas que me gustaron, como la de ponerse objetivos personales a corto plazo (conseguir X colaboradores en un año, por ejemplo) de Leo Vaz, y la de Jared Smith, que explicó (y adhiero) en que el primer paso es siempre ser usuario.  &lt;/p&gt;
&lt;p&gt;El evento trajo consigo a un nuevo colaborador, Martín Cigorraga, y dos posibles colaboradores más en Argentina. Además, estamos organizando juntarnos para hacer una Release Party de Fedora 23.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finalmente quiero…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;… Agradecer a Matías Maceira, Valentín Basel y Laura Fontanesi por hacer que todo ésto se realice sin problemas.&lt;/p&gt;
&lt;p&gt;… Agradecer por la amistad que todos me brindaron durante los 5 días que compartimos.&lt;/p&gt;
&lt;p&gt;… Agradecer al Proyecto Fedora , por facilitarme el viaje y hospedaje, ya que para mí hubiese sido imposible pagarlo.&lt;/p&gt;
&lt;h3&gt;&lt;a href="/images/galleries/2015/FUDConCordoba2015" target="_blank"&gt;Galería de fotos&lt;/a&gt;&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Mon, 28 Sep 2015 00:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2015-09-28:blog/2015/sep/fudcon-cordoba-2015-report-es.html</guid><category>Fedora</category><category>GNU/Linux</category><category>FUDCon</category><category>Cordoba</category><category>LATAM</category><category>event</category></item><item><title>FLISoL 2015 Paraná [Reporte]</title><link>http://chinosoliard.github.io/blog/2015/may/flisol-2015-parana-report-es.html</link><description>&lt;p&gt;&lt;img alt="banner-flisol" src="/images/article/2015/05/afiche-flisol2015-v2.png" class="aligncenter"&gt;&lt;/a&gt;
En Paraná, el evento tomó lugar en la &lt;a href="http://www.frp.utn.edu.ar/"&gt;Universidad Tecnológica Nacional (UTN FRP)&lt;/a&gt;. Tuvimos contratiempos con el tema del lugar, pero una semana antes nos confirmaron que podíamos realizar el evento en la UTN, instantáneamente empezamos con la difusión, cosa que no es nuestro fuerte, siempre muy sobre la fecha.&lt;br /&gt;
El evento empezaba a las 9:00 y terminaba a las 16:30, pero empezamos a las 9:50 y terminamos 17:30; Como siempre, se nos complica todo al principio, y demoramos en arrancar. Nos hubiese encantado seguir hasta más tarde, pero solamente conseguíamos el edificio durante esos horarios.  &lt;/p&gt;
&lt;p&gt;De entrada, quiero agradecer  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Al Laboratorio de investigación &lt;a href="http://www.gugler.com.ar"&gt;GUGLER&lt;/a&gt;, que son una parte indispensable del evento; Sin ellos el evento no se hace.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href="https://fedoraproject.org/wiki/User:Villadalmine"&gt;Rino Rondan&lt;/a&gt;, contribuidor de Fedora Project, que vino a colaborar y disfrutar con nosotros en Paraná, desde CABA.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A todos y cada uno de los que colaboraron y asistieron.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;También quiero agradecer a &lt;a href="http://tick.com.ar/"&gt;Tick Soluciones Informáticas&lt;/a&gt;, que colaboró con el evento dándonos patrocinio y obsequios para sortear.&lt;br /&gt;
  &lt;a href="http://www.tick.com.ar" target="_blank"&gt;&lt;img alt="tick" src="/images/article/2015/05/TICK.png" class="aligncenter"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Asistentes:&lt;/strong&gt;&lt;br /&gt;
Utilizamos como método de registro el sistema que hicieron los chicos de USLA, el cual, después del evento, llevaba estadísticas de todas las sedes (asistentes, instalaciones, charlas, etc.). El pre-registro fue pobre, unos 35-40 inscriptos, y durante el evento, contando disertantes y otras personas, habrá habido unas 45 personas, un número inferior a la edición anterior.&lt;br /&gt;
Según el sistema, se acreditaron 30 personas y 19 se habían pre-registrado y no asistieron, pero no pudimos acreditar a todos, así que no nos podemos guiar tanto por eso.&lt;br /&gt;
Contando los disertantes y colaboradores, más o menos hubo 45-50 personas.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instalaciones:&lt;/strong&gt;&lt;br /&gt;
Hubo pocas instalaciones, ésto se debe a que hoy por hoy es más fácil instalar GNU/Linux que hace algunos años atrás. También demuestra que muchos asistentes van a aprender con las charlas, a participar y compartir la jornada.&lt;br /&gt;
En total se registraron 4 instalaciones, 2 de Ubuntu, 1 de Debian y 1 de Mint.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Charlas:&lt;/strong&gt;&lt;br /&gt;
El cronograma de charlas de éste año fue muy bueno, hubo charlas introductorias y charlas un poco más técnicas, la idea de hacerlas simultaneas nos permitió tener más cantidad de charlas, pero menos asistentes a cada una.&lt;br /&gt;
No se dictaron algunas charlas previstas por demoras, el cronograma de charlas fue el siguiente:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Aula Magna  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apertura del evento&lt;/li&gt;
&lt;li&gt;Lo esencial de Linux (Mario Martín Sbarbaro – GUGLER)  &lt;/li&gt;
&lt;li&gt;Linux y la obsolescencia programada (Leandro Poli)  &lt;/li&gt;
&lt;li&gt;Salvemos a Docker con Atomic (Rino Rondan – Fedora Project)  &lt;/li&gt;
&lt;li&gt;OpenShift Platform as a Service (Chino Soliard – Fedora Project)  &lt;/li&gt;
&lt;li&gt;Logical Volume Manager – Más allá del almacenamiento (Beto Reyna)  &lt;/li&gt;
&lt;li&gt;Configurando un Entorno de Desarrollo Android en GNU/Linux (Leandro Poli)  &lt;/li&gt;
&lt;li&gt;Primeros pasos en Zimbra (Federico Bonnet – GUGLER)  &lt;/li&gt;
&lt;li&gt;Cierre del evento y Sorteos  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aula secundaria&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ecosistema del Software Libre y Fedora Project (Chino Soliard – Fedora Project)&lt;/li&gt;
&lt;li&gt;Introducción al proyecto CIAA (Computadora Industrial Abierta Argentina) (Sergio Burgos)  &lt;/li&gt;
&lt;li&gt;Introducción al mundo del S.L con Puppy Linux (José Luís Pérez)  &lt;/li&gt;
&lt;li&gt;Licencias Libres (Mario Martín Sbarbaro y Exequiel Aramburu – GUGLER)  &lt;/li&gt;
&lt;li&gt;Tecnicatura Universitaria en Software Libre (Martín Bayo – Santa Fé)  &lt;/li&gt;
&lt;li&gt;Proyecto Ovirt (Rino Rondan – Fedora Project)  &lt;/li&gt;
&lt;li&gt;Puppet + Foreman – Usa el Casco (Rino Rondan – Fedora Project)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;El momento atípico&lt;/strong&gt;&lt;br /&gt;
Cerca del final del evento, 2 jóvenes aparecieron con una computadora, pidiendo una instalación… Lo cómico fue que querían que se le reinstale Windows (si, lo que leyeron). Integrantes del LUG le presentaron Linux Mint y se lo llevaron instalado.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;El after&lt;/strong&gt;&lt;br /&gt;
Después del evento, fuimos a mi casa y aprovechamos para tomar unas frías y compartir charlas de todo tipo; Hacía rato no me reía tanto. Espero el año que viene se sumen más.&lt;/p&gt;
&lt;h3&gt;&lt;a href="/images/galleries/2015/FLISoL2015" target="_blank"&gt;Galería de fotos&lt;/a&gt;&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Fri, 01 May 2015 00:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2015-05-01:blog/2015/may/flisol-2015-parana-report-es.html</guid><category>Fedora</category><category>FLISOL</category><category>GNU/Linux</category><category>GUGLER</category><category>LugParana</category><category>Paraná</category><category>event</category></item><item><title>SASO Conf 2015 [Reporte]</title><link>http://chinosoliard.github.io/blog/2015/mar/saso-conf-2015-reporte-es.html</link><description>&lt;p&gt;En la SASO, se dieron charlas de diversas índoles, cómo experiencias, seguridad y hacking, introducción a algunos softwares o plataformas y desarrollo.  &lt;/p&gt;
&lt;p&gt;Por cuestiones de tiempo, no pude terminar mis presentaciones hasta minutos antes de disertarlas, por lo cual no pude asistir a muchas de las charlas.  &lt;/p&gt;
&lt;p&gt;Siempre voy a recordar la SASO, porque conocí gente muy grosa, fueron 3 días conviviendo con gente con mis mismos intereses, compartiendo mates, asados y cervezas.  &lt;/p&gt;
&lt;p&gt;Conocí a un gurú de FreeBSD, que me mostró un mundo desconocido, Ale Sarghel.  &lt;/p&gt;
&lt;p&gt;Estuve a un personaje del software libre muy conocido en Argentina, “Vampii” Franco.  &lt;/p&gt;
&lt;p&gt;Y conocí a un montón de personas más, a los cuales planeo volver a ver, por lo menos en la próxima SASO Conf.  &lt;/p&gt;
&lt;p&gt;Quiero agradecer en general a todos los asistentes, con los cuales hasta el día de hoy tengo contacto a través de WhatsApp, Telegram, Facebook, etc. Pero, principalmente, quiero agradecer a Rodolfo Debona, por la organización del evento, la invitación, y facilitarme asistir al evento, y a Liliana Arbelo que también ayudó mucho en la organización.  &lt;/p&gt;
&lt;p&gt;Ahh, y gracias a Rino, mi colega de Fedora Project, que siempre me motiva para asistir a eventos como éste  &lt;/p&gt;
&lt;h3&gt;&lt;a href="/images/galleries/2015/SASOConf2015" target="_blank"&gt;Galería de fotos&lt;/a&gt;&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Mon, 30 Mar 2015 00:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2015-03-30:blog/2015/mar/saso-conf-2015-reporte-es.html</guid><category>Corrientes</category><category>Curuzú</category><category>Cuatiá</category><category>Fedora</category><category>GNU/Linux</category><category>SASOConf</category><category>event</category></item><item><title>Eclipse en Fedora 21</title><link>http://chinosoliard.github.io/blog/2015/ene/eclipse-en-fedora-21-es.html</link><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Eclipse for Java Developers&lt;/strong&gt;&lt;a href="https://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/lunasr1a" target="_blank"&gt;&lt;img alt="eclipse-java" src="/images/article/2015/01/eclipse-java.png" class="alignright"&gt;&lt;/a&gt;&lt;br /&gt;
  Para instalar Eclipse Java, tan solo tenemos que ejecutar el comando:&lt;br /&gt;
  &lt;code&gt;su -c 'dnf install eclipse'&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
   Ésto instalará Eclipse, OpenJDK-Devel, y todo lo demás necesario para desarrollar código Java.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Eclipse for Java EE Developers&lt;/strong&gt;&lt;a href="https://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/lunasr1a" target="_blank"&gt;&lt;img alt="eclipse-jee" src="/images/article/2015/01/eclipse-javaee.png" class="alignright"&gt;&lt;/a&gt;&lt;br /&gt;
  Para poder desarrollar Java Enterprise Edition con Eclipse, necesitamos instalar Eclipse for Java EE Developers ejecutando:&lt;br /&gt;
  &lt;code&gt;su -c 'dnf install eclipse-webtools-javaee'&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
  Con ésto instalamos los paquetes necesarios para desarrollar Java EE en Eclipse, como servidores Tomcat, y demás. Tambien pueden instalar JBoss para Eclipse, ejecutando el comando:&lt;br /&gt;
  &lt;code&gt;su -c 'dnf install eclipse-jbosstools'&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
  Éste último, instalará, además de servidores JBoss, paquetes como Hibernate.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Eclipse for PHP Developers&lt;/strong&gt;&lt;a href="https://www.eclipse.org/downloads/packages/eclipse-php-developers/lunasr1a" target="_blank"&gt;&lt;img alt="eclipse-php" src="/images/article/2015/01/eclipse-php.png" class="alignright"&gt;&lt;/a&gt;&lt;br /&gt;
  No existe forma de evitar que Eclipse traiga lo necesario para desarrollar Java, por lo cual, siempre se instalará OpenJDK-Devel y demás, pero, para instalar el Eclipse PHP, basta con ejecutar el comando:&lt;br /&gt;
  &lt;code&gt;su -c 'dnf install eclipse-pdt'&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
  Ésto instalará Eclipse Java, y Eclipse PHP, tambien instalará en el sistema Apache (httpd), PHP y demás paquetes necesarios para poder desarrollar PHP en nuestro sistema.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Eclipse for C/C++ Developers&lt;/strong&gt;&lt;a href="https://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers/lunasr1a" target="_blank"&gt;&lt;img alt="eclipse-cdt" src="/images/article/2015/01/eclipse-cdt.png" class="alignright"&gt;&lt;/a&gt;&lt;br /&gt;
  Si bien no es lo más usado en la actualidad, C y C++ nunca desaparecieron. Instalar Eclipse for C/C++ Developers en Fedora es tan sencillo como ejecutar:&lt;br /&gt;
  &lt;code&gt;su -c 'dnf install eclipse-cdt'&lt;/code&gt;&lt;/br&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Eclipse for Python Developers&lt;/strong&gt; (si, para Python)&lt;a href="http://pydev.org/" target="_blank"&gt;&lt;img alt="eclipse-pydev" src="/images/article/2015/01/eclipse-pydev.png" class="alignright"&gt;&lt;/a&gt;&lt;br /&gt;
  No sabía de que Eclipse tambien tenía un IDE para Python, no es (todavía) oficial, pero que es útil, lo es… Se instala ejecutando el comando:&lt;br /&gt;
  &lt;code&gt;su -c 'dnf install eclipse-pydev'&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
  Y con ésto podemos desarrollar código Python, también usar Django.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 14 Jan 2015 13:58:52 -0300</pubDate><guid>tag:chinosoliard.github.io,2015-01-14:blog/2015/ene/eclipse-en-fedora-21-es.html</guid><category>apache</category><category>C/C++</category><category>c++</category><category>cpp</category><category>Eclipse</category><category>Fedora</category><category>21</category><category>Fedora21</category><category>GNU/Linux</category><category>java</category><category>Java EE</category><category>JavaEE</category><category>JBoss</category><category>Php</category><category>Python</category></item><item><title>Fedora Day Buenos Aires 2014 [Reporte]</title><link>http://chinosoliard.github.io/blog/2014/dic/fedora-day-buenos-aires-2014-report-es.html</link><description>&lt;p&gt;Entre las dificultades de la organización, estuvo el problema de que no se conseguía lugar para la realización del evento, ésto costo caro, ya que no pudimos realizar una buena promoción del evento.  &lt;/p&gt;
&lt;p&gt;Recién cuando se confirmó que la UTN nos cedía el lugar, se procedió con todo.  &lt;/p&gt;
&lt;blockquote&gt;De más está agradecer a la gente de la UTN, que hicieron posible que el evento se realice; En especial a Oscar Perez, que estuvo todo el tiempo presente, siempre atendiendo a las necesidades.&lt;/blockquote&gt;

&lt;p&gt;El evento en si, contó con 2 salas, por lo que las charlas eran simultaneas. Yo no llegué con las presentaciones que tenía pensado realizar (Fedora Apps y SELinux), así que solo pude dar la charla de SELinux, la cual tampoco estaba completa.  &lt;/p&gt;
&lt;p&gt;Entre los asistentes que participan en la comunidad Fedora que llegaron desde lejos, cabe destacar la presencia de Leonardo Vaz y Fabio Olivè, ambos de Brasil, desde la ciudad más austral del mundo (Usuahia), Julito Sanchez, de Cordoba asistieron Valentin Basel y Matias Maceira, y yo, desde Paraná, Entre Ríos.  &lt;/p&gt;
&lt;p&gt;Pocos fueron los miembros de Fedora Argentina que no asistieron. Durante el evento, se nombraron 2 nuevos embajadores, además de su aptitud, demostraron mucho compromiso con el proyecto y el evento, ellos son Ivan Weinberg y Jonatan Madera.  &lt;/p&gt;
&lt;p&gt;Personalmente, tuve la suerte de conocer en persona a los demás miembros de la comunidad Fedora Argentina, con los que solo mantenía contacto por chat.  &lt;/p&gt;
&lt;p&gt;Fue un evento lindo, y una buena base para un futuro FUDCon.  &lt;/p&gt;
&lt;h3&gt;&lt;a href="/images/galleries/2014/FedoraDayBuenosAires" target="_blank"|&gt;Galería de fotos&lt;/a&gt;&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sun, 28 Dec 2014 00:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2014-12-28:blog/2014/dic/fedora-day-buenos-aires-2014-report-es.html</guid><category>Fedora</category><category>FedoraDay</category><category>GNU/Linux</category><category>event</category></item><item><title>FLISOL 2014 Sede Paraná [Reporte]</title><link>http://chinosoliard.github.io/blog/2014/may/flisol-2014-parana-report-es.html</link><description>&lt;p&gt;&lt;img alt="flisol-banner" src="/images/article/2014/05/banner-flisol.png" /&gt;&lt;/p&gt;
&lt;p&gt;Nuevamente, el evento se hizo en la &lt;a href="http://www.escuelanormalparana.edu.ar/"&gt;Escuela Normal Superior “José María Torres”&lt;/a&gt;, usamos, al igual que el año pasado, 2 aulas, una para las charlas y otra para las instalaciones.  &lt;/p&gt;
&lt;p&gt;Planificamos un cronograma para el evento, el cual consistía con la apertura del evento a las 10:00 horas, y el final del evento a las 20:00 horas, pero tuvimos problemas con la conexión a internet a primera hora, y la apertura demoró un poco más de lo esperado. A pesar del contratiempo, el evento transcurrió con normalidad, muchísimos asistentes (contamos unos 70 en total), algunos con conocimientos y otros principiantes, pero todos con ganas de participar y aprender.  &lt;/p&gt;
&lt;p&gt;El cronograma de charlas del evento fue el siguiente: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;10:00&lt;br /&gt;
  Acreditación y presentación del evento.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11:00&lt;br /&gt;
&lt;strong&gt;“Ecosistema de Software Libre y Fedora”&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://www.chinosoliard.com"&gt;Adrian "Chino" Soliard&lt;/a&gt;&lt;br /&gt;
  (&lt;a href="http://www.fedoraproject.org"&gt;Fedora Project&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11:30&lt;br /&gt;
&lt;strong&gt;“Instalación de Debian GNU/Linux”&lt;/strong&gt;&lt;br /&gt;
  Damian Sacks y Hernan Samek&lt;br /&gt;
  (&lt;a href="http://www.gugler.com.ar"&gt;Laboratorio Gugler&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;12:30&lt;br /&gt;
&lt;strong&gt;“Instalaciones y Personalización en la Cocina de GNU/Linux.”&lt;/strong&gt;&lt;br /&gt;
  Cristian Ramirez.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;14:00&lt;br /&gt;
&lt;strong&gt;“Seguridad en GNU/Linux”&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://www.chinosoliard.com"&gt;Adrian "Chino" Soliard&lt;/a&gt;&lt;br /&gt;
  (&lt;a href="http://www.fedoraproject.org"&gt;Fedora Project&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;15:00&lt;br /&gt;
&lt;strong&gt;“Infraestructura con Zentyal”&lt;/strong&gt;&lt;br /&gt;
  Federico Bonnet&lt;br /&gt;
  (&lt;a href="http://www.gugler.com.ar"&gt;Laboratorio Gugler&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;16:00&lt;br /&gt;
&lt;strong&gt;“XFCE, un entorno de ventanas liviano”&lt;/strong&gt;&lt;br /&gt;
  Martín Sbarbaro&lt;br /&gt;
  (&lt;a href="http://www.gugler.com.ar"&gt;Laboratorio Gugler&lt;/a&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;17:00&lt;br /&gt;
&lt;strong&gt;“Virtualización”&lt;/strong&gt;&lt;br /&gt;
  Carlos Vergara.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;18:00&lt;br /&gt;
&lt;strong&gt;“Introducción a las Licencias Libres”&lt;/strong&gt;&lt;br /&gt;
  Martín Sbarbaro&lt;br /&gt;
  (&lt;a href="http://www.gugler.com.ar"&gt;Laboratorio Gugler&lt;/a&gt;).  &lt;/li&gt;
&lt;li&gt;19:00&lt;br /&gt;
&lt;strong&gt;Entornos virtuales con Proxmox&lt;/strong&gt;&lt;br /&gt;
  Carlos Vergara.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En cuanto a las instalaciones, durante el evento se realizaron muchísimas instalaciones, en su totalidad de &lt;a href="http://www.debian.org/index.es.html"&gt;Debian&lt;/a&gt; (Damian Sacks realizó 4 instalaciones, Hernan Samek hizo 2, Martin Sbarbaro 3, y Cristian Ramirez 1), así mismo, se grabaron y repartieron discos de instalación de &lt;a href="http://www.debian.org/index.es.html"&gt;Debian&lt;/a&gt; y &lt;a href="http://www.fedoraproject.org/es"&gt;Fedora&lt;/a&gt; (Damian Sacks entregó 11 DVDs de Debian, Hernan Samek entregó más de 10, Martín Sbarbaro tambien 10 o más, y yo entregué 14 DVDs de Fedora Live Desktop 32 bits y 13 de Fedora Live Desktop 64 bits).  &lt;/p&gt;
&lt;p&gt;Estos números arrojan un total de &lt;strong&gt;10 instalaciones&lt;/strong&gt; y aproximadamente &lt;strong&gt;60 medios de instalación repartidos&lt;/strong&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mi conclusión:&lt;/strong&gt;&lt;br /&gt;
El evento salió muchísimo mejor de lo esperado, la cantidad de asistentes (que al principio me dió miedo de no poder ubicarlos en las aulas) fue impresionante, las charlas estuvieron bárbaras, ni muy técnicas, ni muy sencillas, y la cantidad de instalaciones que se hicieron fue importante, como así tambien la entrega de medios de instalación.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Agradecimiento:&lt;/strong&gt;&lt;br /&gt;
Quiero agradecer a todos los que colaboraron con la organización y el desarrollo del evento.  &lt;/p&gt;
&lt;p&gt;Primeramente, y en especial, quiero agradecer a Martín Sbarbaro, de GUGLER, ya que fue el encargado de conseguir el lugar, y conseguir el aval de la FCyT para la realización del evento, tambien se encargó de imprimir y diseñar un sin fin de folletos y afiches para difundir el evento.&lt;br /&gt;
En general, quiero agradecer al Laboratorio GUGLER y sus integrantes, por las charlas, por la participación y la colaboración previa y durante el evento, ellos son Damian Sacks, Hernan Samek, Federico Bonnet y demás (Maru, Diego, y los demás).&lt;br /&gt;
Tambien, agradecer a Cristian Ramirez por su charla y por su colaboración con las instalaciones y el evento en si, a Carlos Vergara por su entusiasmo, su colaboración y sus 2 charlas que fueron realmente muy buenas.&lt;br /&gt;
Tambien en especial, quiero agradecer a Luis Alberto “Beto” Reyna por su presencia, hacía muchísimo tiempo que no lo veía, y me emocioné mucho al contar con él en nuestro evento, muchísimas gracias por su colaboración.&lt;br /&gt;
Y bueno, agradecer a todos los asistentes, y a los incondicionales colaboradores con el evento.  &lt;/p&gt;
&lt;h3&gt;&lt;a href="/images/galleries/2014/FLISoL2014" target="_blank"&gt;Galería de fotos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A continuación, una foto de los disertantes y Beto; Lamentablemente, Cristian Ramirez se tuvo que retirar antes, y no salió en la foto.
&lt;img alt="flisol-disertantes" src="/images/article/2014/05/flisol-disertantes.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Mon, 05 May 2014 19:30:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2014-05-05:blog/2014/may/flisol-2014-parana-report-es.html</guid><category>Fedora</category><category>FLISOL</category><category>GNU/Linux</category><category>GUGLER</category><category>LugParana</category><category>Paraná</category><category>event</category></item><item><title>Multiples instalaciones de Eclipse IDE en el mismo sistema</title><link>http://chinosoliard.github.io/blog/2014/abr/multiple-installations-eclipse-same-system-es.html</link><description>&lt;p&gt;Antes que nada aclaro que estos pasos me sirvieron en &lt;a href="http://fedoraproject.org/"&gt;Fedora&lt;/a&gt;, y son compatibles con todos los sistemas GNU/Linux, desconozco si existe alguna forma de hacerlo en Windows.  &lt;/p&gt;
&lt;p&gt;Eclipse necesita de un entorno de ejecución Java, por lo que, basta con tener OpenJDK o instalar el Java Runtime Environment oficial (Oracle JRE) para poder iniciar eclipse. En el caso de necesitar el JDK oficial (muchos desarrolladores Java no quieren arriesgarse con OpenJDK), pueden instalar Java Development Kit Oficial (Oracle JDK) el cual trae incluido JRE.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instalación de JRE/JDK&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Descargar JRE o JDK en versión RPM. &lt;a href="http://www.oracle.com/technetwork/es/java/javasebusiness/downloads/index.html"&gt;(desde acá)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Ejecutamos los siguientes comandos en una consola o terminal:&lt;br /&gt;
  &lt;code&gt;# rpm -ivh jre-8u&lt;em&gt;-linux-&lt;/em&gt;.rpm`&lt;/code&gt;&lt;/br&gt;
  &lt;code&gt;# alternatives –install /usr/bin/java java /usr/java/default/bin/java 20000&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Instalación de Eclipse IDE&lt;/strong&gt;&lt;br /&gt;
Instalar Eclipse en Fedora es tan sencillo como ejecutar “&lt;code&gt;yum install eclipse&lt;/code&gt;“, pero nos vemos apegado a configuraciones de Fedora, actualizaciones de Fedora y, nos limitamos a no poder hacer lo que sería el fin de este post.&lt;br /&gt;
De todos modos, instalar Eclipse de forma manual, no trae complicaciones, y tampoco es tan dificil.&lt;br /&gt;
Lo primero que tenemos que hacer es descargar la versión (o las versiones) que queremos instalar en formato ; Como dije, en mi caso, Eclipse JEE, Eclipse C/C++ y Eclipse PHP (éste último en su versión Helios SP1).  &lt;/p&gt;
&lt;p&gt;Una vez que los descargamos, hay que hacer las instalaciones &lt;strong&gt;DE A UNA&lt;/strong&gt;; Tomamos como ejemplo Eclipse JEE, y realizamos los siguientes pasos:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Extraemos la versión de Eclipse (en este caso JEE) que descargamos con el siguiente comando:&lt;br /&gt;
&lt;code&gt;# tar -xvzf eclipse-jee-linux-gtk-*.tar.gz&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Donde “jee” hay que reemplazarlo por lo que corresponda según la versión de eclipse.&lt;br /&gt;
Donde “*” es un comodín para la arquitectura de Eclipse (32 bits o 64 bits).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Esto va a crear un directorio “eclipse“, el cual vamos a mover a /opt, pero, con un nombre especifico, en el caso de JEE, le cambiamos el nombre a “eclipsejee“, ésto lo hacemos ejecutando:&lt;br /&gt;
&lt;code&gt;# mv eclipse /opt/eclipsejee&lt;/code&gt;&lt;br /&gt;
  En éste caso, lo movemos a “eclipsejee” porque tomamos como ejemplo Eclipse JEE, puede ser “eclipsephp” o lo que corresponda.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, tenemos que darle los permisos de lectura a los archivos del directorio, con el comando:&lt;br /&gt;
&lt;code&gt;# chmod -R +r /opt/eclipsejee&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después, creamos el ejecutable, haciendo:&lt;br /&gt;
&lt;code&gt;# touch /usr/bin/eclipsejee&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# chmod 755 /usr/bin/eclipsejee&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Editamos este archivo que creamos, en este caso, con “gedit”&lt;br /&gt;
&lt;code&gt;# gedit /usr/bin/eclipsejee&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;En el archivo, copiamos lo siguiente:&lt;br /&gt;
  &lt;code&gt;export ECLIPSEJEE_HOME=”/opt/eclipsejee”&lt;/br&gt;
  $ECLIPSEJEE_HOME/eclipse $*&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Donde “eclipsejee” (o “ECLIPSEJEE”), puede ser “eclipsephp” o lo que corresponda.&lt;br /&gt;
Con ésto, lo que hacemos es que ahora, desde una consola, usemos el comando “$ eclipsejee” para ejecutar Eclipse JEE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finalmente, creamos el acceso por el menú de GNOME, esto lo hacemos (con gedit) haciendo:&lt;br /&gt;
&lt;code&gt;# gedit /usr/share/applications/eclipsejee.desktop&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Y copiando lo siguiente en el archivo:&lt;br /&gt;
  &lt;code&gt;
[Desktop Entry]&lt;br /&gt;
Encoding=UTF-8&lt;br /&gt;
Name=Eclipse JEE&lt;br /&gt;
Comment=Eclipse JEE&lt;br /&gt;
Exec=eclipsejee&lt;br /&gt;
Icon=/opt/eclipse/icon.xpm&lt;br /&gt;
Terminal=false&lt;br /&gt;
Type=Application&lt;br /&gt;
Categories=GNOME;Application;Development;&lt;br /&gt;
StartupNotify=true&lt;br /&gt;
&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Ésto creara un icono en el menú de aplicaciones de GNOME, que ejecutará “eclipsejee“.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Un paso adicional&lt;/strong&gt;, es hacer que cada eclipse tenga un icono adecuado, así sería más facil identificarlo (y además más “estético” :-P); Busqué un rato hasta que encontré unos iconos como la gente, y resultaron:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;a href="/images/article/2014/04/EclipseIcons/iconjee.xpm"&gt;&lt;img alt="eclipsejee" src="/images/article/2014/04/iconjee.png" /&gt;&lt;/a&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;a href="/images/article/2014/04/EclipseIcons/iconphp.xpm"&gt;&lt;img alt="eclipsephp" src="/images/article/2014/04/iconphp.png" /&gt;&lt;/a&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;a href="/images/article/2014/04/EclipseIcons/iconcpp.xpm"&gt;&lt;img alt="eclipsecpp" src="/images/article/2014/04/iconcpp.png" /&gt;&lt;/a&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;p&gt;Una vez descargados, basta moverlos (reemplazar) a icon.xpm en (siguiendo el ejemplo) /opt/eclipsejee/icon.xpm, con el comando:&lt;br /&gt;
&lt;code&gt;# mv /iconjee.xpm /opt/eclipsejee/icon.xpm&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Espero les ayude.  &lt;/p&gt;
&lt;p&gt;Saludos!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sat, 05 Apr 2014 18:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2014-04-05:blog/2014/abr/multiple-installations-eclipse-same-system-es.html</guid><category>c++</category><category>cpp</category><category>development</category><category>eclipse</category><category>IDE</category><category>Fedora</category><category>GNU/Linux</category><category>jee</category><category>Php</category></item><item><title>Servidor LAMP en Fedora</title><link>http://chinosoliard.github.io/blog/2014/abr/LAMP-server-Fedora-es.html</link><description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalación&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Apache Web Server&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://www.apache.org/"&gt;Apache&lt;/a&gt; es una fundación, pero el nombre Apache hace (directamente) referencia al servidor web HTTPd (Apache HyperText Transfer Protocol daemon). Instalarlo en Fedora no es para nada dificil, basta con ejecutar el siguiente comando en la consola:&lt;br /&gt;
&lt;code&gt;# yum install httpd&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MariaDB&lt;/strong&gt;&lt;br /&gt;
  En el caso de Fedora, MySQL fue reemplazado por MariaDB, tras la compra de MySQL por parte de Oracle, lo cual lo convirtió en un software de codigo abierto, en vez de software libre, como antes era. Al igual que al servidor web Apache, instalarlo es tan sencillo como ejecutar el siguiente comando:&lt;br /&gt;
&lt;code&gt;# yum install mariadb-server&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PHP (mod_php)&lt;/strong&gt;&lt;br /&gt;
  El servidor web Apache es modular, por lo que se pueden instalar los módulos que necesitemos (mod_python, mod_perl, mos_php, mod_ssl, etc.). En mi caso, que voy a trabajar con PHP, voy a instalar mod_php, con el comando siguiente:&lt;br /&gt;
&lt;code&gt;# yum install php&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Con estos tres simples pasos, tenemos instalado el software  necesario&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Inicialización de los servicios&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Apache Web Server&lt;/strong&gt;&lt;br /&gt;
  Para iniciar el servidor web apache, hacemos:&lt;br /&gt;
&lt;code&gt;# systemctl start httpd.service&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MariaDB&lt;/strong&gt;&lt;br /&gt;
  En el caso de MariaDB, ejecutamos:&lt;br /&gt;
&lt;code&gt;# systemctl start mariadb.service&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configuración de los servicios y el sistema&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalación segura de MariaDB&lt;/strong&gt;&lt;br /&gt;
  Este proceso:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Establece (Cambia) la contraseña de root (de MariaDB).  &lt;/li&gt;
&lt;li&gt;Elimina usuarios anónimos.  &lt;/li&gt;
&lt;li&gt;Deshabilita el login de root de forma remota.  &lt;/li&gt;
&lt;li&gt;Elimina la base de datos “test” y el acceso a ésta.  &lt;/li&gt;
&lt;li&gt;Carga nuevamente la tabla de privilegios.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para ejecutar “MariaDB Secure Installation” corremos el comando:&lt;br /&gt;
&lt;code&gt;# /usr/bin/mysql_secure_installation&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Permisos del directorio de Apache&lt;/strong&gt;&lt;br /&gt;
  Al instala HTTPd, se crea el directorio &lt;code&gt;/var/www/html&lt;/code&gt;, el cual contendrá el/los archivos del servidor web, con esto me refiero a que si ingresamos a &lt;code&gt;http://localhost/index.php&lt;/code&gt; estaremos ingresando a &lt;code&gt;/var/www/html/index.php&lt;/code&gt;.&lt;br /&gt;
  Si queremos añadir un archivo o editar alguno, necesitaremos permisos para ello, y apache también necesita acceso para poder “servir” los archivos; Entonces, debemos hacer que el directorio “/var/www/html” pertenezca al grupo “apache”, y a nuestro usuario, ésto se configura mediante los siguientes comandos:&lt;br /&gt;
&lt;code&gt;# chown -R usuario /var/www/html/&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chgrp -R apache /var/www/html/&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chmod -R 750 /var/www/html/&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chmod g+s /var/www/&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Si Apache va a tener que escribir archivos en el directorio (por ejemplo: subir archivos), también tendremos que darle permisos de escritura a Apache, usando el siguiente comando, le daremos permiso a Apache para escribir en un directorio llamado “media” dentro de /var/www/html/&lt;br /&gt;
&lt;code&gt;#chmod g+w /var/www/html/media&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Con esto ya estaríamos listo para trabajar.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configurando el inicio automático de los servicios&lt;/strong&gt;&lt;br /&gt;
  En el caso de que queramos que nuestro sistema funcione como servidor, resultaría tedioso iniciar los servicios manualmente cada vez que el equipo se apague, se corte la luz, o lo-que-sea, podemos hacer que los servicios se ejecuten automáticamente haciendo uso de los comandos:&lt;br /&gt;
  &lt;code&gt;# systemctl enable mariadb.service&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
  &lt;code&gt;# systemctl enable httpd.service&lt;/code&gt;&lt;/br&gt;  &lt;br /&gt;
   Estos últimos 2 (dos) comandos hacen que inicien automáticamente al inicio del sistema MariaDB y Apache HTTP Server (respectivamente).  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Apache tiene muchísimas configuraciones, permite host virtuales, múltiples usuarios, y muchísimas cosas más; Acá solo muestro como hacer de nuestra pc una plataforma de desarrollo web, o, a lo sumo, un servidor muy simple.  &lt;/p&gt;
&lt;p&gt;Si buscan en internet pueden encontrar como hacer para alojar varios sitios en un solo equipo, o permitir que varios usuarios puedan editar diferentes sitios, es solo cuestión de buscar.  &lt;/p&gt;
&lt;p&gt;Espero les haya servido, saludos!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Thu, 03 Apr 2014 18:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2014-04-03:blog/2014/abr/LAMP-server-Fedora-es.html</guid><category>apache</category><category>Fedora</category><category>GNU/Linux</category><category>httpd</category><category>LAMP</category><category>MariaDB</category><category>mod_php</category><category>MySQL</category><category>Perl</category><category>php</category><category>python</category><category>sql</category><category>systemctl</category><category>web</category></item><item><title>A perder el tiempo… HP Compaq Airlife 100</title><link>http://chinosoliard.github.io/blog/2014/mar/waste-time-airlife100-es.html</link><description>&lt;p&gt;&lt;strong&gt;¿Que es lo que le pasa?&lt;/strong&gt;&lt;br /&gt;
Bueno, el problema es que trae Android 1.6 (totalmente privatizado, la tablet es fabricada por HP Compaq y comercializada por Movistar), y un Kernel 2.6.29 (muy, muy antiguo), por lo cual, actualizar Android es algo tedioso, instalarle una distribución GNU/linux también.  &lt;/p&gt;
&lt;p&gt;He intentado comenzar con varios proyectos, uno de esos era airlife100.com.ar, el cual era un portal dedicado a la tablet, en la cual fui subiendo aplicaciones que corrían en la versión oficial de la tablet (Angry Birds, Google Maps, una versión vieja de Facebook, entre otras), y tenía como propósito construir una versión nueva de Android para la tablet; Si bien debería continuar con ese proyecto, el ente que proporciona los dominios “.com.ar” ahora cobra el registro y renovación de los dominios (a un precio mayor que el registro de un dominio “.com”), entonces, se me torna complicado soportar económicamente el portal, además, no hubo un mucho “quorum” involucrado en el desarrollo de una actualización.  &lt;/p&gt;
&lt;p&gt;Ahora, he decidido ponerme manos a la obra en una actualización para el dispositivo, por empezar, debería hacer un kernel actualizado (estoy pensando en un 2.6.39), y aunque los pronósticos no sean buenos, creo que lo único que tengo para perder es tiempo y, a lo sumo, el funcionamiento de una tablet que no funciona.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Como voy?&lt;/strong&gt;&lt;br /&gt;
¡No sé! Empecé ayer, estoy muy entusiasmado, pero no entiendo nada de kernel, compilarlo quizá sea la tarea más fácil, pero todavía estoy viendo como “prepararlo”.  &lt;/p&gt;
&lt;p&gt;Descargué de &lt;a href="https://www.kernel.org/"&gt;kernel.org&lt;/a&gt; el kernel 3.13.6 estándar, conseguí la versión oficial del &lt;a href="http://adf.ly/g5QGg"&gt;kernel de la Airlife 100 (kernel 2.6.29)&lt;/a&gt; y empecé a compararlos; Encontré cosas que me llamaron la atención (una referencia a arch/n68knommu, y un otra a unos drivers wi-fi Atheros). Después, pensé que capaz había mucha diferencia entre el kernel 2.6.29 y el 3.13.6, entonces descargué el 2.6.39.4 y los empecé a comparar.  &lt;/p&gt;
&lt;p&gt;El comando “diff” de GNU/linux, me dio un resultado que quizá también me sirva: en arch/arm/mach-msm/ se encuentran los controladores para el Qualcomm Snapdragon MSM8250 (y en drivers/msm/ deberían estar los drivers del GPU Adreno 200).  &lt;/p&gt;
&lt;p&gt;Hay varias distribuciones GNU/Linux preparadas para correr en procesadores con instrucciones basadas en ARMv7, yo, por mi parte, tengo pensado intentar hacer funcionar &lt;a href="https://fedoraproject.org/wiki/Architectures/ARM"&gt;Fedora ARM&lt;/a&gt;, pero si el kernel queda funcionando, será posible la instalación de varias distribuciones, inclusive, versiones más actualizadas de Android.  &lt;/p&gt;
&lt;p&gt;Por ahora es lo único que sé, estoy seguro de que es un trabajo que me va a tomar muchísimo tiempo, pero pienso que hay un montón de gente en España y países de latinoamerica que sufren como yo, quizá alguno pueda ayudarme.  &lt;/p&gt;
&lt;p&gt;Veré que pasa con ésto, solo les pido ayuda, si es que saben algo.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sat, 15 Mar 2014 22:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2014-03-15:blog/2014/mar/waste-time-airlife100-es.html</guid><category>Airlife100</category><category>Android</category><category>GNU/Linux</category><category>kernel</category><category>MSM8250</category><category>project</category><category>QSD8250</category><category>Qualcomm</category><category>Snapdragon</category></item><item><title>Un poco de Malware y GNU/Linux [Parte 1]</title><link>http://chinosoliard.github.io/blog/2014/ene/some-about-malware-and-gnu-linux-es.html</link><description>&lt;p&gt;&lt;strong&gt;VIRUS Y GNU/LINUX&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Un VIRUS es un malware infeccioso que, originalmente, tiene como objetivo alterar el comportamiento normal de un sistema; Se ejecutan &lt;strong&gt;sin el consentimiento del usuario&lt;/strong&gt; (generalmente se ejecutan desde un ejecutable infectado), y una vez ejecutado comienza a propagarse, esto lo hace, en la mayoría de los casos, reemplazando otros ejecutables por otros infectados por su código. Los virus suelen estar acompañados de &lt;a href="http://www.eset.com.mx/centro-amenazas/amenazas/2148-PayLoad"&gt;Payloads&lt;/a&gt;, son la “carga útil” encargada de realizar las acciones maliciosas (borrar archivos, sobre-escritura de disco, reemplazo de bios, etc).  &lt;/p&gt;
&lt;p&gt;En los sistemas GNU/Linux, los virus son prácticamente inexistentes, esto se debe al sistema de permisos que hereda desde UNIX, el cual restringe lectura, escritura y ejecución de los archivos, excluyendo la posibilidad de que un virus se ejecute sin el consentimiento del usuario, y también, que se reproduzca infectando otros archivos a los cuales no tenga permiso. Aún así, ¿Que pasa si esconden en un virus en un paquete (&lt;em&gt;.deb o &lt;/em&gt;.rpm, etc) que queremos instalar? Lo bueno es que en GNU/Linux existen los repositorios, pero a veces las aplicaciones no están en los repositorios y se opta por descargarlos de alguna otra fuente, lo cual puede llegar a ser un riesgo, aunque, la arquitectura de memoria virtual de GNU/Linux y el modo de funcionamiento de los procesadores, posee 4 anillos enumerados del 0 al 3 (a menor número mayores permisos), el Kernel hace uso solo del anillo 0, los procesos usan el anillo 3, y el Kernel hace creer a los procesos que toda la memoria es de ellos, es decir, no podría encontrar referencias a memorias de otros procesos, por lo cual, no podría tampoco copiar su código a la memoria.  &lt;/p&gt;
&lt;blockquote&gt;Ningún proceso, ni siquiera los que tenga privilegios de “root”, pueden acceder a la memoria de otros procesos.&lt;/blockquote&gt;

&lt;p&gt;Teniendo en cuenta que muchos equipos con GNU/Linux tienen también Windows (dual boot), es posible que mediante alguna herramienta para montar particiones de GNU/Linux (ext2, ext3, ext4, reiserFS, etc) un virus consiga acceso y privilegios como para escribir código en algún archivo clave del sistema GNU/Linux, como el “init” (proceso inicial del que se crean los demás procesos) o la shell que use “root”, en este caso, las protecciones del sistema GNU/Linux son inútiles.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TROYANOS Y GNU/LINUX&lt;/strong&gt;&lt;br /&gt;
Los TROYANOS (de “caballos de troya”), en pocas palabras, permiten el &lt;strong&gt;acceso remoto al equipo&lt;/strong&gt; en el cual se ejecutan. Pueden realizar diferentes tareas, pero lo fundamental es crear una “puerta trasera” (backdoor) que permite la administración remota del troyano.  &lt;/p&gt;
&lt;blockquote&gt;Los troyanos constan de 2 partes, una que es para administrarlo de forma remota, y otro, que es el troyano en si, que es el que recibe las ordenes a través del backdoor.&lt;/blockquote&gt;

&lt;p&gt;Debe entenderse que un troyano no es en realidad un virus, esto se define por su finalidad; El virus tiene como objetivo propagarse y destruir (con su payload), el troyano pretende ofrecer acceso remoto a un usuario malintencionado. En la actualidad, es mucho más común encontrarse con troyanos que con virus, ya que poseen funciones como keyloggers (registro de escritura) para averiguar contraseñas, capturas de pantallas, y ejecución de código en el huésped de forma remota. Últimamente, sus finalidades son delictivas, por eso podemos ver muchas noticias sobre “troyanos bancarios”.  &lt;/p&gt;
&lt;p&gt;Al igual que con los virus, es necesario que el troyano consiga permisos de administrador para ser instalado en un sistema GNU/linux.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WORMS (GUSANOS) Y GNU/LINUX&lt;/strong&gt;&lt;br /&gt;
Los gusanos son, al igual que los virus, malware infecciosos que, en lugar de infectar ficheros, lo que infectan son ordenadores; Es decir, un gusano es similar a un virus pero en lugar de infectar ficheros &lt;strong&gt;se propagan de ordenador en ordenador a traves de la red&lt;/strong&gt; (ya sea local o Internet). El objetivo suele ser es infectar la mayor cantidad de ordenadores y redes informáticas, aunque también puede contener instrucciones dañinas al igual que los virus. La forma de expansión de los gusanos es un poco más desarrollada que la de los virus, puesto a que no se reproducen tanto en el sistema en el que ya se encuentran, si no que lo hacen a traves de la red, utilizando vulnerabilidades del sistema y/o servicios que se encuentren ejecutados en la victima.  &lt;/p&gt;
&lt;blockquote&gt;Aunque los gusanos se reproducen de ordenador en ordenador, suelen crear copias de sí mismo para seguir distribuyéndose, en correos electrónicos, redes P2P (Ares, Emule, etc) y mensajería instantánea, entre otros.&lt;/blockquote&gt;

&lt;p&gt;Los gusanos hacen uso de los servicios que dan cara a la red (o Internet) para expandirse o para infiltrarse, por eso &lt;strong&gt;es sumamente importante tener los sistemas y aplicaciones actualizadas&lt;/strong&gt;.  &lt;/p&gt;
&lt;blockquote&gt;Los Gusanos Informáticos suelen utilizar técnicas de ingeniería social para conseguir mayor efectividad. Para ello, los creadores seleccionan temas o nombres atractivos con el que camuflar el archivo malicioso. Los temas más recurrentes son los relacionados con el sexo, famosos, temas morbosos, temas de actualidad o software pirata.&lt;/blockquote&gt;

&lt;p&gt;La solución a los gusanos es hacer uso del sistema de actualizaciones de seguridad de nuestra distribución; Teniendo la distribución actualizada, no habrá problemas. Ejecutar solamente los servicios que necesitamos es también una buena idea por dos razones: mejoramos el aprovechamiento de recursos y evitamos problemas de seguridad.  &lt;/p&gt;
&lt;p&gt;Aunque los gusanos parezcan peligrosos para los sistemas GNU/Linux, debe entenderse que el problema no está en GNU/Linux, sino en las aplicaciones que el sistema tenga ejecutados, que un gusano se entrometa en nuestro sistema, también necesita permisos especiales, al igual que todo tipo de malware.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ENTONCES…&lt;/strong&gt;&lt;br /&gt;
Después de leer esto, podrías pensar que un sistema GNU/Linux es invulnerable, ya que los permisos no permiten que el malware se entrometa sin nuestro consentimiento, a menos que instalemos paquetes que esté infectado, o ejecutemos como administrador algo de origen dudoso; &lt;strong&gt;El problema no está en GNU/Linux si no en los servicios y programas que usemos&lt;/strong&gt;, ya que muchas veces estos tienen vulnerabilidades que son usadas para escalar privilegios y conseguir permisos adicionales.  &lt;/p&gt;
&lt;p&gt;En la &lt;strong&gt;[Parte 2]&lt;/strong&gt; comentaré más sobre escalar privilegios, otros tipos de malware y sobre por qué no hay tantos ataques de malware a los sistemas GNU/Linux.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Fri, 10 Jan 2014 20:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2014-01-10:blog/2014/ene/some-about-malware-and-gnu-linux-es.html</guid><category>GNU/Linux</category><category>Malware</category><category>Payload</category><category>Virus</category></item><item><title>Sony Ericsson Xperia Neo V con Zelly Cream 3.0.1 + Link2SD</title><link>http://chinosoliard.github.io/blog/2013/ago/sony-ericsson-xperia-neo-v-zelly-cream-301-link2sd-es.html</link><description>&lt;p&gt;Por empezar, hago una lista de lo que necesitamos para llevar a cabo el proceso:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Tener el celular actualizado al Firmware 4.1.B.0.587 y rooteado.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="../../2012/nov/update-SE-NeoV-ICS-oficial-es.html"&gt;Actualizar Sony Ericsson Xperia Neo V con Ice Cream Sandwich OFICIAL&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="../mar/rooting-SE-NeoV-firmware-41B0587-es.html"&gt;Rooteando Sony Ericsson Xperia Neo V con Firmware 4.1.B.0.587&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://adf.ly/deDCD"&gt;ClockWorkMod Recovery&lt;/a&gt; [1]  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alguna utilidad para particionar la tarjeta microSD, existen varias alterntivas para Windows, yo recomiendo &lt;a href="http://adf.ly/deDEF"&gt;PartitionWizard&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://adf.ly/deDG6"&gt;Zelly Cream 3.0.1 Full ROM&lt;/a&gt; [2]&lt;br /&gt;
&lt;a href="http://adf.ly/deDJU"&gt;Otro Link&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://adf.ly/deDKi"&gt;Otro Link&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Recomiendo, ir bajando todo mientras se prosigue con el post, para ir ahorrando tiempo.&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Si ya tenés instalado ClockWorkMod Recovery puedes saltearte este paso&lt;/em&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos ClockWorkMod Recovery&lt;/strong&gt;&lt;br /&gt;
  Lo primero que hacemos es instalar ClockWorkMod Recovery, es un programa que puede ejecutarse antes de que se carge el sistema operativo, permite hacer limpiezas, actualizar el sistema, realizar backups, entre otras cosas.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Extraemos el contenido del archivo [1].  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En el celular nos vamos a “Ajustes” &amp;gt; “Opciones de desarrollo” y activamos “Depuración de USB”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutamos “install-cwm1.bat” (de los archivos extraídos, obvio) y conectamos el dispositivo y seguimos las instrucciones.&lt;br /&gt;
  Nota: El software dice que prendas la pantalla y aceptes los permisos de superusuario, a mi, personalmente, no me saltó ningun cartel, pero me fijé en los registros de la aplicación Superuser y aparecía una actividad por consola.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finalmente, ClockWorkMod está instalado, para ejecutarlo apagamos el equipo y cuando lo prendemos, apenas vibra empezamos a apretar repetidamente el botón de bajar volumen.&lt;br /&gt;
&lt;strong&gt;Si no funcionase, intentar nuevamente hasta que lo haga.&lt;/strong&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Particionamos la memoria microSD&lt;/strong&gt;&lt;br /&gt;
  Particionamos la tarjeta de memoria para que queden 2 partes, una para los datos y otra para que las aplicaciones se instalen ahí en vez de en la memoria interna del celular.&lt;br /&gt;
&lt;strong&gt;Este proceso depende mucho del software que utilicen para hacer las particiones&lt;/strong&gt;, por eso no voy a dar un detalle de como realizarlo; Lo que si, voy a resaltar puntos importantes:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RESPALDAR LOS DATOS&lt;/strong&gt;&lt;br /&gt;
  Si no queres perder datos, reespaldalos siempre que trabajes con particiones. “Es un antes y un después”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La partición para las aplicaciones debe:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quedar segunda, es decir, la partición de datos (FAT32) debe quedar a la izquierda, la partición para aplicaciones debe quedar a lo ultimo de la tarjeta.  &lt;/li&gt;
&lt;li&gt;Ser de formato &lt;strong&gt;EXT2&lt;/strong&gt;.  &lt;/li&gt;
&lt;li&gt;En mi caso la hice de 1 GB (1GB = 1024MB), pero puede ser menor o mayor, aunque no creo que necesite ser mayor de 1G.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En la imagen a continuación se muestra más o menos como quedaría, no le presten atención a la 3ra partición, esa la hice para otro experimento.&lt;br /&gt;
&lt;a href="/images/article/2013/08/gparted.png"&gt;&lt;img alt="gparted" src="/images/article/2013/08/gparted.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos Zelly Cream 3.0.1&lt;/strong&gt;&lt;br /&gt;
  Zelly Cream es una ROM de Android 4.1.1 NO OFICIAL, que ha sido votada como la “mejor ROM  Ice Cream Sandwich” por sus usuarios.&lt;br /&gt;
  Personalmente no me ha defraudado, tiene muchas opciones y está bien optimizada.&lt;br /&gt;
  Pueden obtener más información en el thread oficial: &lt;a href="http://forum.xda-developers.com/showthread.php?t=2151648"&gt;http://forum.xda-developers.com/showthread.php?t=2151648&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Copiamos Zelly Cream v3.0.1 Full ROM [2] a la partición de datos en la tarjeta microSD del celular (a la &lt;strong&gt;de datos&lt;/strong&gt;, no a la de las aplicaciones).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iniciamos ClockWorkMod Recovery. (Prendemos el celular y cuando vibre empezamos a apretar reiteradas veces la tecla de bajar volumen).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una vez en CWM Recovery, seleccionamos “wipe data/factory reset” con la tecla “home” (la casita) y luego seleccionamos “Yes”. (La navegación se realiza con las teclas de volumen).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después, seleccionamos “wipe cache partition” y luego “Yes”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nos dirigimos a  “advanced” y ahí hacemos “Wipe Dalvik Cache”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tambien en “advanced”, le damos a “Wipe Battery Stats”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luego nos vamos a “mounts and storage” del menú principal y seleccionamos “format /data”, “format /system” y “format /cache”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, nos dirigimos a “install zip from sdcard” en el menú principal, dentro de este, seleccionamos “choose zip from sd card” y elegimos el archivo “Zelly Cream v3.0.1 by gagan.u20.zip”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se ejecuta el instalador, en el cual seguimos las instrucciones; Hay algunas cosas que se pueden personalizar, yo solamente elegí la versión de mi dispositivo, y no instalé ninguna de las aplicaciones que propone, pero eso va en cada uno.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cuando termina la instalación, desactivamos la opción “Reboot device”, y le damos “Finish”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una vez en CWM Recovery, seleccionamos “Reboot system now”.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¡Listo! Ya está instalado Zelly Cream 3.0.1 en nuestro Neo V, ahora solo hay que esperar a que se termine de preparar todo y el sistema cargue, luego solo seguir el asistente.&lt;br /&gt;
&lt;strong&gt;Si pensas instalar Link2SD, te recomendaría hacerlo automáticamente después de sincronizar la cuenta de Google.&lt;/strong&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos y configuramos Link2SD&lt;/strong&gt;&lt;br /&gt;
  Link2SD es una aplicación que utiliza una fortaleza que tiene GNU/Linux, los enlaces, que son como los accesos directos de Windows, pero su trabajo es bastante más desarrollado.&lt;br /&gt;
  Link2SD, al instalarse una aplicación en la memoria interna del telefono, la mueve a la partición que hicimos para las aplicaciones, y crea un enlace duro, haciendo que en la memoria interna solo queden enlaces a las aplicaciones, y estas en realidad están en la tarjeta de memoria.&lt;br /&gt;
  Hay que tener en cuenta que cuando saquemos la tarjeta y/o conectemos el celular a una computadora las aplicaciones NO ESTARAN DISPONIBLES, por lo que es mejor, a veces, apagar el telefono, quitar la tarjeta y conectarla de alguna otra forma a la computadora.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Instalado Zelly Cream 3.0.1, y ya sincronizada nuestra cuenta de Google, nos dirigimos al Play Store, Buscamos e instalamos Link2SD, y lo ejecutamos.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nos va a aparecer una ventana que nos pregunta si le damos permiso de superusuario o no, obviamente, le damos a Link2SD permisos de Superusuario.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luego, nos aparece el asistente para configuración, en donde nos pregunta el formato de la segunda partición de la tarjeta SD, seleccionamos, obviamente, EXT2.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link2SD crea un script que se ejecuta cuando inicia Android, este script se encarga de montar la partición como parte del sistema cada vez que Android inicie. Luego de crear el script, nos dice que tiene que reiniciar el sistema; Reiniciamos.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después de que reinicia, y ejecutamos nuevamente Link2SD, y pasamos una ventana introductoria, nos muestra una lista de las aplicaciones instaladas, apretamos la tecla “menu” del Xperia, y nos vamos a “Ajustes”, ahí checkeamos que esten activas las opciones “Enlace Automático”, las 3 opciones que aparecen en “Ajustes de enlace automático”. Tambien, en “Ubicación de la instalación” seleccionamos “Externo”, esto es para que las aplicaciones que se puedan instalar en la tarjeta SD, lo hagan. (es decir, las que sin Link2SD se pudieran mover a la tarjeta SD).&lt;br /&gt;
  Más de eso, no hay que configurar para que la aplicación funcione.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En el menú principal tambien tenemos para seleccionar “Información de almacenamiento”, que muestra más detalles de almacenamiento.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una vez configurado Link2SD, ya pueden instalar aplicaciones, este automáticamente.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Algunas consideraciones:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ciertas aplicaciones, por ejemplo: WhatsApp, y otras que es mejor que tengan más performance, &lt;strong&gt;conviene dejarlas en la memoria interna del celular, estas se van a ejecutar con más velocidad que las que estén en la tarjeta SD&lt;/strong&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En “Ajustes” &amp;gt; “Almacenamiento” no se va a mostrar la memoria extendida generada por Link2SD, si no que se veran numeros incoherentes, como los de la imagen que muestra que la memoria interna tiene 420MB, tengo instalado 428MB en aplicaciones y casi 100 disponibles.&lt;br /&gt;
&lt;a href="/images/article/2013/08/links2sd-1.png"&gt;&lt;img alt="links2sd-1" src="/images/article/2013/08/links2sd-1.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href="/images/article/2013/08/links2sd-2.png"&gt;&lt;img alt="links2sd-2" src="/images/article/2013/08/links2sd-2.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yo lo tengo hace más de 24 horas y anda muy bien. Tengo instalado:&lt;br /&gt;
Adobe Reader, Androidify, Barcode Scanner, Brujula, Google Calendar, ConnectBot, Cymera, Google Drive, Dropbox, ES File Explorer, Facebook, Flash Player, Foursquare, Google Goggles, Google+, Hangouts, Instagram, Level, Linkedin, Maps, Facebook Messenger, My Tracks, Pinterest, Shazam, Google Sky Map, Android Terminal Emulator, Google Translator, Tumblr, Twitter, WakeOnLan, WhatsApp y YouTube Remote, y el equipo sigue funcionando excelente.  &lt;/p&gt;
&lt;p&gt;Espero les sea útil el articulo. Saludos!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sat, 24 Aug 2013 00:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-08-24:blog/2013/ago/sony-ericsson-xperia-neo-v-zelly-cream-301-link2sd-es.html</guid><category>Android</category><category>Apps2SD</category><category>CWM</category><category>Recovery</category><category>Ice Cream Sandwich</category><category>ICS</category><category>Link2SD</category><category>Neo V</category><category>Recovery</category><category>Sony Ericsson</category><category>Xperia</category><category>Zelly Cream</category></item><item><title>Problems mounting NTFS partitions from Windows 8 on Fedora</title><link>http://chinosoliard.github.io/blog/2013/ago/problems-mounting-ntfs-windows8-fedora-en.html</link><description>&lt;p&gt;Windows 8 brings enabled by default “Quick Start”, this feature is for Windows to start in a time relatively short (very noticeable compared to other Windows versions), and works by making the system does not shut down completely, if that is not a state “partial” hibernation, I mean, saves the state of the system into a file on disk, and when you start the system again, load the file contents, leaving the system in the same way that when turned off.  &lt;/p&gt;
&lt;p&gt;The problem comes when, in my case for this example, I want to start GNU / Linux which has a configuration in / etc / fstab to automatically mount the partition I use to share data between the two operating systems, Fedora tells me that you have problems mount that partition.
The solution is simple, disable this feature in Windows, to do this …  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boot up Windows 8  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At the start menu, type “power management”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the right side menu, go to “Settings” tab.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There, select from the left menu the option “Change startup / shutdown button actions”.”&lt;br /&gt;
&lt;a href="/images/article/2013/08/ntfs-1.png"&gt;&lt;img alt="nfts-1" src="/images/article/2013/08/ntfs-1.png" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It opens a “System Configuration” window with some blocked options, we click “Change settings that are currently unavailable”, this will allow us to change the blocked settings.&lt;br /&gt;
&lt;a href="/images/article/2013/08/ntfs-2.png"&gt;&lt;img alt="nfts-2" src="/images/article/2013/08/ntfs-2.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, simply uncheck the box “Enable Quick Start (recommended)” and save the changes.&lt;br /&gt;
&lt;a href="/images/article/2013/08/ntfs-3.png"&gt;&lt;img alt="nfts-3" src="/images/article/2013/08/ntfs-3.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That’s it, now there is no problem to mount NTFS partitions of Windows 8 on GNU / Linux.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sat, 17 Aug 2013 19:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-08-17:blog/2013/ago/problems-mounting-ntfs-windows8-fedora-en.html</guid><category>Fedora</category><category>GNU/Linux</category><category>issue</category><category>NTFS</category><category>partition</category><category>power</category><category>problem</category><category>Windows</category><category>Windows-8</category></item><item><title>Synchronizing files with UNISON on Fedora</title><link>http://chinosoliard.github.io/blog/2013/may/synchronizing-files-unison-fedora-en.html</link><description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installing UNISON&lt;/strong&gt;&lt;br /&gt;
  Unison is in Fedora repositories, so, installing it is just using the following command:&lt;br /&gt;
&lt;code&gt;su -c ‘yum install unison’&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creating Sinchronization profiles&lt;/strong&gt;&lt;br /&gt;
  Unison works with profiles, which are configured to specify which directories are going to be synchronized.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We execute Unison, now I can’t remember if the first time it automatically ran the profile wizard to add a profile, if not, click the “Add” button to start the creation wizard.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the first screen, which is just an introduction, click on “Forward”.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-1.png"&gt;&lt;img alt="unison-1" src="/images/article/2013/05/unison-1.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then, it ask us to complete the profile name and description. We complete and give next.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-2.png"&gt;&lt;img alt="unison-2" src="/images/article/2013/05/unison-2.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then, it asks us to select the connection type, where we can choose Local, SSH, RSH and TCP.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Local Sinchronization profiles&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We follow the steps above, now select “Local” from the list of connection types and give “forward”.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-3.png"&gt;&lt;img alt="unison-3" src="/images/article/2013/05/unison-3.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Below, we declare the directories involved in the synchronization, when complete, give “Forward”.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-4.png"&gt;&lt;img alt="unison-4" src="/images/article/2013/05/unison-4.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In my case, I’m going to synchronize directories that are on NTFS partitions, therefore, I check the box to set the profile to work without using the GNU/Linux permissions.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-5.png"&gt;&lt;img alt="unison-5" src="/images/article/2013/05/unison-5.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, Unison report that it finished configuring the profile, and we press “Apply” to create it.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-6.png"&gt;&lt;img alt="unison-6" src="/images/article/2013/05/unison-6.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Remote SSH Synchronization Profile&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We follow the steps above, now select “SSH” from the list of connection types, the contents of the window will be extended and now we be asked to introduce the host, which can be the name or IP address of the computer to which we want to connect, and the username that we will use to log into the host.&lt;br /&gt;
   Also, we can activate a checkbox to let Unison compress the files to be sent, as you can read at the window, is good for slow connections, but make fast connections more slower.&lt;br /&gt;
   After setting this, give next.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-7.png"&gt;&lt;img alt="unison-7" src="/images/article/2013/05/unison-7.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then, we set the directories that we will synchronize. We can select the Local directory, the remote directory should be written, so it is necessary to know first the name of the directory. You can confirm this by doing a SSH connection with a console.&lt;br /&gt;
 After that, click on “Forward”.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-8.png"&gt;&lt;img alt="unison-8" src="/images/article/2013/05/unison-8.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As in the previous example, where we done a Local Synchronization, we can set the profile to work with NTFS or FAT, or rather, to exclude the treatment of file permissions that GNU / Linux uses. In my case, I use NTFS partitions in sync, so I active the checkbox.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-9.png"&gt;&lt;img alt="unison-9" src="/images/article/2013/05/unison-9.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then just press “Apply” and it’s ready, we ended setting the profile.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-10.png"&gt;&lt;img alt="unison-10" src="/images/article/2013/05/unison-10.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Performing a Synchronization.&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Execute a synchronization profile, selecting it from the list and clicking on “Open”.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-11.png"&gt;&lt;img alt="unison-11" src="/images/article/2013/05/unison-11.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;em&gt;When opening one of the profiles created to synchronize via SSHwe will be asked for a password to login.&lt;/em&gt;&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-12.png"&gt;&lt;img alt="unison-12" src="/images/article/2013/05/unison-12.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When we did the first synchronization, it shows a window like this, which explains that there are no historical records of synchronizations, and that this is because, or synchronizations have not been performed yet, or we’ve updated the version of Unison and this one does not recognize the historical files; Wherefore, Unison assumes that the historical record is completely empty.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-13.png"&gt;&lt;img alt="unison-13" src="/images/article/2013/05/unison-13.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;em&gt;The first time you perform synchronizations, this process takes too long.&lt;/em&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the comparison, Unison generates a list, which automatically adjusted the changes to make, which we can modify.&lt;br /&gt;
  We review the shifts to be performed, we can skip changes (which ignores the row, it make no changes), and choose the replacement and copying in both directions.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-14.png"&gt;&lt;img alt="unison-14" src="/images/article/2013/05/unison-14.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once we checked the changes to make, press the “Go” button, and Unison start syncing.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finishing copying files, a window will appear reporting that the synchronization finished, and a short summary, which we can extend.&lt;br /&gt;
&lt;a href="/images/article/2013/05/unison-15.png"&gt;&lt;img alt="unison-15" src="/images/article/2013/05/unison-15.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is the simply way to use Unison; If a profile have a first run done, the point 3.2 end faster.&lt;br /&gt;
An important point to note is that Unison must be installed on both devices, if synchronization is performed remotely.  &lt;br /&gt;
n this guide we work with Unison with graphical environment, but also can be used with a console (I am considering using Unison from the command line  with “cron” for automating synchronizations and backups).  &lt;/p&gt;
&lt;p&gt;I hope it has served.  &lt;/p&gt;
&lt;p&gt;regards&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 22 May 2013 14:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-05-22:blog/2013/may/synchronizing-files-unison-fedora-en.html</guid><category>Fedora</category><category>GNU/Linux</category><category>Local</category><category>maintenance</category><category>SSH</category><category>Sync</category><category>Synchronization</category><category>UNISON</category></item><item><title>FLISoL 2013 en Paraná [Reporte]</title><link>http://chinosoliard.github.io/blog/2013/may/flisol-2013-parana-report-es.html</link><description>&lt;p&gt;&lt;a href="/images/article/2013/05/FLISOL-Grande.png"&gt;&lt;img alt="FLISOL2013-grande" src="/images/article/2013/05/FLISOL-Grande.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;El evento se realizó en la Escuela Normal Superior “José María Torres” (conocida localmente simplemente “Escuela Normal”) en la cual ocupamos 2 aulas, una para el install-fest, y otra para las charlas; El evento fue planificado para realizarse de 10:00 a 20:00 horas, con un break desde las 13:00 hasta las 14:30 horas y un “open floor” desde las 19:00 hasta las 20:00.  &lt;/p&gt;
&lt;p&gt;Hubo una concurrencia respetable (Unas 30/35 personas), para ser que en Paraná no se realizan tantos eventos de este tipo. La lluvia intensa provocó que varias personas no se hicieran presentes, y, como coordinador del evento, me sentí decepcionado, hasta que me comentaron que, en ediciones anteriores, era igual o menor la concurrencia.  &lt;/p&gt;
&lt;p&gt;El &lt;strong&gt;cronograma&lt;/strong&gt; del evento fue el siguiente:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10:30 = Acreditación.  &lt;/li&gt;
&lt;li&gt;11:00 = “Introducción al Software Libre” – Hipolito Alvarez.  &lt;/li&gt;
&lt;li&gt;12:00 = “10 años con Software Libre – Experiancias de un usuario” – Cristian Ramirez.  &lt;/li&gt;
&lt;li&gt;13:00 = Break.  &lt;/li&gt;
&lt;li&gt;14:30 = Acreditación.  &lt;/li&gt;
&lt;li&gt;15:00 = “Instalación de Debian GNU/Linux” – Laboratorio Gugler.  &lt;/li&gt;
&lt;li&gt;16:00 = “Migracion de Datos y OpenOffice” – Lucas Militello y Adriana Lederhos (Ubuntu-Ar).  &lt;/li&gt;
&lt;li&gt;17:00 = “Proyecto Fedora” – Adrian Soliard (Fedora Project).  &lt;/li&gt;
&lt;li&gt;18:00 = “Introducción al Sistema Operativo Huayra GNU/Linux” – H. Albornoz y J. Ferrari.  &lt;/li&gt;
&lt;li&gt;19:00 = Open Floor y Cierre del Evento.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El balance positivo se notó cuando, durante las charlas y en los break, la gente hacía consultas, se sacaba dudas y participaba de debates.  &lt;/p&gt;
&lt;p&gt;En cuanto a las &lt;strong&gt;instalaciones&lt;/strong&gt;:&lt;br /&gt;
No se realizaron tantas, ya que no hubo muchas maquinas presentes entre los asistentes, además, uno de los asistentes poseía una notebook con UEFI (Windows 8), con la cual no quisimos jugar mucho. Personalmente, realicé 2 instalaciones de Fedora, y una tercera se canceló porque el interesado tenía que retirarse.  &lt;/p&gt;
&lt;p&gt;Tambien, se repartieron &lt;strong&gt;medios de instalación y marchandising&lt;/strong&gt;:  &lt;/p&gt;
&lt;p&gt;Como embajador de Fedora Project, llevé medios de instalación y marchandising, a continuación un sumario:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10 DVD de instalación 32-bits (No sobraron).  &lt;/li&gt;
&lt;li&gt;10 DVD de instalación 64-bits (Sobró 1).  &lt;/li&gt;
&lt;li&gt;15 Live Desktop CD 32-bits (Sobraron 6).  &lt;/li&gt;
&lt;li&gt;15 Live Desktop CD 64-bits (Sobraron 11).  &lt;/li&gt;
&lt;li&gt;10 Live KDE Desktop CD 32-bits (No sobraron).  &lt;/li&gt;
&lt;li&gt;10 Live KDE Desktop CD 64-bits (No sobraron).  &lt;/li&gt;
&lt;li&gt;Stickers Fedora Logo.  &lt;/li&gt;
&lt;li&gt;Stickers Fedora y Fedora Logo.  &lt;/li&gt;
&lt;li&gt;Stickers Fedora Libre-de-registro.  &lt;/li&gt;
&lt;li&gt;Stickers Fedora Notebook (Potenciado por Fedora).  &lt;/li&gt;
&lt;li&gt;Stickers Fedora Notebook (Impulsado por Fedora).  &lt;/li&gt;
&lt;li&gt;Stickers Fedora Notebook (Funciona con Fedora).  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La gente de GUGLER distribuyó medios de instalación de Debian GNU/Linux.  &lt;/p&gt;
&lt;p&gt;Los chicos de Ubuntu LoCo llevaron y distribuyeron medios de instalación de Ubuntu y stickers, tambien.  &lt;/p&gt;
&lt;p&gt;No podemos dejar de lado lo que, creo, llamó más a la gente, que fueron las &lt;strong&gt;charlas&lt;/strong&gt;:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Introducción al Software Libre&lt;/strong&gt; &lt;em&gt;(por Hipolito Alvarez)&lt;/em&gt;:
  Una presentación en la que explicó bien las licencias, que es el Open Source, Free Software, etc. La gente le prestó muchísima atención, realmente muy buen nivel.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;10 años con Software Libre – Experiencias de un usuario&lt;/strong&gt; &lt;em&gt;(por Cristian Ramirez)&lt;/em&gt;:&lt;br /&gt;
  Una charla impresionante, y quizá la que más cautivó a la gente. Se trató de las experiencias del disertante, en sus 10 años como usuario de Software Libre. Dio lugar a debates y consultas.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalación de Debian GNU/Linux&lt;/strong&gt; &lt;em&gt;(por Laboratorio Gugler)&lt;/em&gt;:
  Es indiscutible la sabiduría de la gente de GUGLER, que además de ayudar con todas las instalaciones y organización del evento, dieron una charla sobre Debian GNU/Linux, y mostraron un paso-a-paso de su instalación, explicando donde pueden cometerse errores (algo muy importante).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Migracion de Datos y OpenOffice&lt;/strong&gt; &lt;em&gt;(por Lucas Militello y Adriana Lederhos de Ubuntu LoCo Team)&lt;/em&gt;:&lt;br /&gt;
  Una charla muy buena, que consistió en mostrar Ubuntu y sus cualidades y mostró alternativas para aplicaciones aplicaciones.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proyecto Fedora&lt;/strong&gt; &lt;em&gt;(por Adrian "Chino"  Soliard de Fedora Project)&lt;/em&gt;:&lt;br /&gt;
  Una charla que presentaba el Proyecto Fedora, sus fundamentos y cualidades, explicaba por qué usar Fedora, y que hago yo personalmente con Fedora.&lt;br /&gt;
  Con solo un poco de autocrítica, no estoy contento con mi presentación, en un momento sentí desinteres por la gente, y eso, sumado a los nervios, hizo que la presentación pase volando. Aún así, hubo algunas preguntas post-presentación.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(Mi presentación: http://asoliard.fedorapeople.org/presentations/fedora-flisol2013parana.svg)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt;Introducción al Sistema Operativo Huayra GNU/Linux&lt;/em&gt; &lt;/em&gt;(por Hernan Albornoz y José Ferrari de LUG Victoria)*:&lt;br /&gt;
  Una muy completa exposición de Huayra GNU/Linux (el Sistema Operativo de Conectar Igualdad), presentada por la gente del Grupo de Usuarios de Linux de Victoria (Entre Ríos) que detallaron todo y mostraron su funcionamiento.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mi conclusión:&lt;/strong&gt;&lt;br /&gt;
A pesar de que el evento tuvo la concurrencia que (yo) esperaba, la gente se fue contenta, y se motivó muchísimo. Durante los break se podía apreciar a la gente haciendo consultas y hablando sobre temas relacionados al Software Libre.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Agradecimientos:&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A los integrantes de &lt;a href="http://www.gugler.com.ar"&gt;GUGLER&lt;/a&gt; por colaborar activamente, conseguir el lugar para la realización del evento, y participar y asistir.  &lt;/li&gt;
&lt;li&gt;A Cristian Ramirez, por ayudarme con la organización y planificación, por acompañarme en la nota para Canal 9, por su participación activa en el evento y colaboración.  &lt;/li&gt;
&lt;li&gt;A Hipólito Alvarez, que pudo hacerse un tiempo para dar una de las charlas “base” de un evento de Software Libre.  &lt;/li&gt;
&lt;li&gt;A la gente de LUG Victoria, por haber hecho 127 Km para compartir con nosotros esta jornada, y por participar.  &lt;/li&gt;
&lt;li&gt;A Lucas y Adriana, que se contactaron conmigo, y con muy poco tiempo pudieron lograr una presentación muy buena.  &lt;/li&gt;
&lt;li&gt;A Maximiliano Churichi, que si bien la lluvia no lo dejó asistir, me ayudó con el diseño de la página web y otros temas de la organización.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="/images/galleries/2013/FLISoL2013" target="_blank"&gt;Galería de fotos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Ahora, solo espero que todos hayan disfrutado del evento, y que los asistentes le hayan sacado fruto. Esperamos poder hacer otros eventos para promocionar y difundir el Software Libre en Paraná.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Thu, 09 May 2013 15:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-05-09:blog/2013/may/flisol-2013-parana-report-es.html</guid><category>Fedora</category><category>FLISOL</category><category>GNU/Linux</category><category>GUGLER</category><category>LugParana</category><category>Paraná</category><category>event</category></item><item><title>FLISOL 2013 en Paraná</title><link>http://chinosoliard.github.io/blog/2013/abr/flisol-2013-parana-comming-es.html</link><description>&lt;p&gt;&lt;strong&gt;Están todos invitados a asistir, es un evento libre y gratuito.&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="/images/article/2013/04/pre-banner-flisol2013.jpg"&gt;&lt;img alt="pre-banner-flisol2013" src="/images/article/2013/04/pre-banner-flisol2013.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Personalmente, estoy preparando todo el material de Fedora para distribuir. 
&lt;a href="/images/article/2013/04/dvd-fedora-18.jpg"&gt;&lt;img alt="dvd-fedora-18" src="/images/article/2013/04/dvd-fedora-18.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 17 Apr 2013 22:30:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-04-17:blog/2013/abr/flisol-2013-parana-comming-es.html</guid><category>Fedora</category><category>FLISOL</category><category>GNU/Linux</category><category>Paraná</category><category>project</category><category>event</category></item><item><title>ROM Zelly Cream v2.0 en Xperia Neo V con Firmware 4.1.B.0.587</title><link>http://chinosoliard.github.io/blog/2013/mar/zelly-cream-20-xperia-neov-firmware-41B0587-es.html</link><description>&lt;p&gt;&lt;strong&gt;Para realizar la instalación, el celular debe estar &lt;a href="/blog/2012/nov/update-SE-NeoV-ICS-oficial-es.html"&gt;actualizado&lt;/a&gt; y &lt;a href="/blog/2013/mar/rooting-SE-NeoV-firmware-41B0587-es.html"&gt;rooteado&lt;/a&gt;. Si no fuera así debes hacerlo antes de continuar.&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Los archivos que vamos a necesitar son:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://adf.ly/deDCD"&gt;ClockWorkMod Recovery&lt;/a&gt; [1]  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://adf.ly/deDuS"&gt;Zelly Cream v1.2.0 – FULL ROM&lt;/a&gt; [2]  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://adf.ly/deDvB"&gt;Zelly Cream v2.0 – Update ROM&lt;/a&gt; [3]  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://adf.ly/deDwq"&gt;Zelly Cream hot update [4]&lt;/a&gt; [Opcional]  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lo primero que hacemos es instalar ClockWorkMod Recovery, es un programa que puede ejecutarse antes de que se carge el sistema operativo, permite hacer limpiezas, actualizar el sistema, realizar backups, entre otras cosas. Para hacerlo:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Extraemos el contenido del archivo [1].  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En el celular nos vamos a “Ajustes” &amp;gt; “Opciones de desarrollo” y activamos “Depuración de USB”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutamos “install-cwm1.bat” (de los archivos extraídos, obvio) y conectamos el dispositivo y seguimos las instrucciones.&lt;br /&gt;
&lt;strong&gt;Nota:&lt;/strong&gt; &lt;em&gt;El software dice que prendas la pantalla y aceptes los permisos de superusuario, a mi, personalmente, no me saltó ningun cartel, pero me fijé en los registros de la aplicación Superuser y aparecía una actividad por consola.&lt;/em&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finalmente, ClockWorkMod está instalado, para ejecutarlo apagamos el equipo y cuando lo prendemos, apenas vibra empezamos a apretar repetidamente el botón de bajar volumen.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;ClockWorkMod nos sirve para instalar esta ROM entre otras que hay dando vueltas por la web, yo probé otra que no me terminó de convencer, y ahora voy a proba esta. Si quieren pueden probar otra, pero recuerden que los pasos no siempre son los mismos.&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Procedemos a la instalación de Zelly Cream, &lt;strong&gt;recuerden tener la batería del celular con una carga considerable&lt;/strong&gt;.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Copiamos los archivos restantes [2][3][4] a la tarjeta microSD del celular.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iniciamos ClockWorkMod Recovery.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seleccionamos “wipe data/factory reset” con la tecla “home” (la casita) y luego seleccionamos “Yes”. (La navegación se realiza con las teclas de volumen)  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seleccionamos “wipe cache partition” y luego “Yes”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nos dirigimos a  “advanced” y ahí hacemos “Wipe Dalvik Cache”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tambien en “advanced” le damos a “Wipe Battery Stats”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luego nos vamos a “mounts and storage” del menú principal y seleccionamos “format /data”, “format /system” y “format /cache”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, nos dirigimos a “install zip from sdcard” en el menú principal, dentro de este, seleccionamos “choose zip from sd card” y elegimos el archivo “Zelly Cream 1.2.0 by gagan.u20.zip” ([2]).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se ejecuta el instalador, en el cual seguimos las instrucciones; Hay algunas cosas que se pueden personalizar, yo solamente elegí la versión de mi dispositivo.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Desactivamos la opción “Reboot device” cuando termina de instalar, así vuelve al ClockWorkMod Recovery, y le damos “Finish”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En ClockWorkMod Recovery, hacemos lo mismo que en el paso 8, pero esta vez elejimos “Zelly Cream v2.0 by gagan.u20.zip” [3].  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seguimos los pasos de instalación, nuevamente podemos personalizarla, yo, otra vez, elegí mi dispositivo y nada más. Termina la instalación y volvemos a hacer el paso 10.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, hacemos el paso 8, pero elegimos el último archivo, “Zelly Cream App Updates.zip”[4]. Este es mucho más rápido y sencillo, en unos segundos ya está listo.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Volvemos al menú principal de ClockWorkMod Recovery y seleccionamos “reboot phone”.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¡Listo! Ya está instalado Zelly Cream en nuestro Neo V, ahora solo hay que esperar a que se termine de preparar todo y el sistema cargue, luego solo seguir el asistente.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Tue, 19 Mar 2013 23:30:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-03-19:blog/2013/mar/zelly-cream-20-xperia-neov-firmware-41B0587-es.html</guid><category>Android</category><category>ClockWorkMod</category><category>Recovery</category><category>CWM</category><category>Gingerbread</category><category>Ice Cream Sandwich</category><category>ICS</category><category>Neo V</category><category>Sony Ericsson</category><category>Xperia</category><category>Zelly Cream</category></item><item><title>Rooteando Sony Ericsson Xperia Neo V con Firmware 4.1.B.0.587</title><link>http://chinosoliard.github.io/blog/2013/mar/rooting-SE-NeoV-firmware-41B0587-es.html</link><description>&lt;p&gt;Para llevar a cabo el rooteo necesitamos la misma aplicación que usamos para actualizar el equipo, y además necesitamos descargar:&lt;br /&gt;
  * &lt;a href="http://adf.ly/deCwy"&gt;MT11i_4.1.A.0.562_kernel.ftf&lt;/a&gt;&lt;br /&gt;
  * &lt;a href="http://adf.ly/deD0A"&gt;DooMLoRD_v1_Xperia-2011-ICS-ROOT-emu-busybox-su.zip&lt;/a&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Nos vamos, en el celular, a “Ajustes” &amp;gt; “Opciones de desarrollo” y activamos “Depuración de USB” y “Permitir ubic. de prueba”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En “Ajustes”, nos vamos a “Xperia ™” &amp;gt; “Conectividad” &amp;gt; “Modo de conexión USB” y elegimos “MSC”.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copiamos el archivo que descargamos (MT11i_4.1.A.0.562_kernel.ftf) a la carpeta “firmwares” de Flashtool  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutamos Flashtool y hacemos clic en el rayo y luego en flashmode, como cuando actualizamos el telefono (se explica en el post citado anteriormente).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En la lista, seleccionamos la versión ***.0.562 y le damos OK, nos aparece la ventana diciendo que desconectemos y apaguemos el teléfono; Luego apretamos y mantenemos apretado el botón “volver” y conectamos el cable USB. Flashtool empieza a flashear el dispositivo, solo hay que esperar a que termine.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extraemos los archivos de “DooMLoRD_v1_Xperia-2011-ICS-ROOT-emu-busybox-su.zip” y ejecutamos “runme.bat” de los archivos generados.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Con el equipo prendido, conectamos el cable USB y omitimos “PC Companion Software”. El teléfono se reiniciara algunas veces, y cuando el programa diga que está listo, podemos continuar.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, solo queda volver a actualizar el Kernel; Para eso, abrimos nuevamente Flashtool, el rayo y luego flashmode, pero ahora excluímos todo menos Kernel, como se muestra en la imágen, le damos “OK” y flasheamos nuevamente.&lt;br /&gt;
&lt;a href="/images/article//2013/03/flashtool-onlykernel2.png"&gt;&lt;img alt="flashtool-onlykernel2" src="/images/article//2013/03/flashtool-onlykernel2.png" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Y con estos simples pasos, ¡listo! Nuestro Sony Ericsson Neo V ahora tiene Ice Cream Sandwich y está rooteado.  &lt;/p&gt;
&lt;p&gt;Espero les sirva. Saludos!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Tue, 19 Mar 2013 16:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-03-19:blog/2013/mar/rooting-SE-NeoV-firmware-41B0587-es.html</guid><category>Android</category><category>flashtool</category><category>Ice Cream Sandwich</category><category>ICS</category><category>MT11i</category><category>Neo V</category><category>root</category><category>Sony Ericsson</category><category>Xperia</category></item><item><title>My first Fedora 18 (Spherical Cow) post after 2 weeks of use</title><link>http://chinosoliard.github.io/blog/2013/feb/first-Fedora18-post-after-2-weeks-en.html</link><description>&lt;p&gt;To start, installation is super simple, I just didn’t like (and after trying it 4 times I don’t understand it well), is the disk partitioner, is something uncomfortable, unintuitive.  &lt;/p&gt;
&lt;p&gt;System speed is phenomenal, and personally, it’s nice to know that there are very regular updates.  &lt;/p&gt;
&lt;p&gt;GNOME 3.6 is the bad that brought Fedora 18, and after reading some reviews noted that people have not been able to distinguish between Fedora and GNOME. Version 3.6 of GNOME is fast, the new menu, which is not much different, is good, is a change that is not feeling, but the bottom bar is not so nice as before, is larger and more sensitive, it open all the time and lock the screen. The most uncomfortable thing I’ve found is Nautilus (the file browser), I can not open two panels at a time (function which was done with the F3 key), therefore I can not drag with the middle mouse button to do links, etc., and the worst part is not being able to return to the previous folder by pressing the “Backspace”, is super uncomfortable, you have to use the mouse with Nautilus, which has greatly reduced my browsing speed.  &lt;/p&gt;
&lt;p&gt;Everything else has worked deluxe, although, I admit I didn’t have had much time to try other things. These contras only have reduced the time for some things, the system is still very fast and useful, and I hope GNOME people think in this errors they have had and fix them. Maybe later I make another post about the subject. Now I get to continue programming.  &lt;/p&gt;
&lt;p&gt;Regards!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Tue, 05 Feb 2013 21:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2013-02-05:blog/2013/feb/first-Fedora18-post-after-2-weeks-en.html</guid><category>Fedora</category><category>Fedora-18</category><category>GNOME</category><category>gnome-3.6</category><category>GNU/Linux</category><category>Spherical Cow</category></item><item><title>Instalando VirtualBox 4.2 en Fedora</title><link>http://chinosoliard.github.io/blog/2012/dic/installing-virtualbox-42-fedora-es.html</link><description>&lt;p&gt;Aclaro, que cuando quise instalar la versión 4.2.* no me dijo que desinstalaría la versión 4.1.*, ni que molestaría, ni nada, pero por las dudas, la desinstalé igual con el siguiente comando:&lt;br /&gt;
&lt;code&gt;$ sudo yum remove VirtualBox-4.1*&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Si no tuvieses instalado la versión anterior de VirtualBox, deberías instalar los repositorios oficiales, para mantener siempre actualizado (la versión actual, de acuerdo a lo que me pasó a mí). Primero, descargamos el archivo de repositorio ejecutando el siguiente comando en una consola:&lt;br /&gt;
&lt;code&gt;$ sudo wget http://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Luego, lo movemos al directorio de los repositorios, lo hacemos con la siguiente linea:&lt;br /&gt;
&lt;code&gt;$ sudo mv virtualbox.repo /etc/yum.repos.d/&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Instalamos las cabeceras del kernel, y otros modulos para el kernel:&lt;br /&gt;
&lt;code&gt;$ sudo yum install gcc kernel-headers dkms kernel-devel&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Finalmente, ejecutamos la instalación de VirtualBox 4.2:&lt;br /&gt;
&lt;code&gt;$ sudo yum install VirtualBox-4.2&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Listo! Tenemos instalado la ultima versión de VirtualBox 4.2, y se actualizará simplemente con un &lt;code&gt;$ sudo yum update&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sat, 15 Dec 2012 21:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-12-15:blog/2012/dic/installing-virtualbox-42-fedora-es.html</guid><category>Fedora</category><category>GNU/Linux</category><category>Oracle</category><category>VirtualBox</category></item><item><title>Actualizar Sony Ericsson Xperia Neo V con Ice Cream Sandwich OFICIAL</title><link>http://chinosoliard.github.io/blog/2012/nov/update-SE-NeoV-ICS-oficial-es.html</link><description>&lt;p&gt;&lt;img alt="NeoVAndroid404" src="/images/article/2012/11/NeoVLogoyAndroid404.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ADVERTENCIA: SE BORRAN TODOS LOS DATOS QUE HAY EN EL TELÉFONO, DEJA EL TELÉFONO COMO NUEVO. Lo unico que no borra son los datos de la tarjeta MicroSD.&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Descargamos lo necesario para realizar la actualización.&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Firmware 4.1.B.0.587 (Tenémos que descargar la versión acorde a nuestra ubicación)&lt;br /&gt;
a = american | i = international&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deDZU"&gt;MT11a 4.1.B.0.587 US, CDF-1254-9468i&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deDZU"&gt;MT11i 4.1.B.0.587 NCB, Nordic, CDF-1255-1755, SI-1254-9263&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deDch"&gt;MT11i 4.1.B.0.587 India CDF-1254-8478, SI-1254-8966&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deDeF"&gt;MT11i 4.1.B.0.587 Central Europe 1, CDF-1254-9708&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deDft"&gt;MT15i 4.1.B.0.587 NCB, Nordic, CDF-1247-0875&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flashtool (ultima versión disponible)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://adf.ly/uUJeV"&gt;Flashtool — Xperia devices flashing&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos Flashtool y los drivers correspondientes&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instalamos Flashtool, corriendo el ejecutable y siguiendo los pasos de instalación.  &lt;/li&gt;
&lt;li&gt;Una vez finalizada la instalación, nos dirigimos a la carpeta donde se instaló Flashtool (Por ejemplo: “C:\Flashtool”).  &lt;/li&gt;
&lt;li&gt;Dentro de la carpeta de Flashtool, acccedemos a la carpeta “drivers”, y ejecutamos el *.exe que se encuentre en ese directorio (“Flashtool-drivers.exe”, en este caso).  &lt;/li&gt;
&lt;li&gt;En la lista de controladores, elegimos los siguientes:  &lt;ul&gt;
&lt;li&gt;Sony Ericsson Xperia arc, Xperia Neo, Xperia PLAY, Xperia acro IS11S, Xperia acro SO-2C drivers  &lt;/li&gt;
&lt;li&gt;Flashmode Drivers  &lt;/li&gt;
&lt;li&gt;Fastboot Drivers  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;... y finalizamos la instalación.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Copiamos&lt;/strong&gt; el archivo *.tft (firmware) al directorio “firmwares” dentro del directorio de instalación de Flashtool.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ejecutamos Flashtool&lt;/strong&gt;, y hacemos click en el trueno, seleccionamos “Flashmode” y le damos OK.&lt;br /&gt;
&lt;img alt="flash-tool" src="/images/article/2012/11/flashtool-flashmode.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En la lista de Firmwares que apareció, &lt;strong&gt;seleccionamos&lt;/strong&gt; la que corresponde (MT11i, por ejemplo), y le damos OK.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nos aparece un cartel que dice que &lt;strong&gt;desconectemos y apaguemos el teléfono&lt;/strong&gt;, que apretemos y mantengamos apretado el botón “volver” (la flechita para atras) y conectemos el cable. &lt;strong&gt;NO SOLTAR LA TECLA HASTA QUE TERMINE EL PROCESO&lt;/strong&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Comienza la instalación de los drivers&lt;/strong&gt;, puede ser que además de los drivers que instalamos, Windows necesite descargar algunos (automáticamente) de internet.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una vez finalizada la instalación de los drivers, Flashtool comienza a hacer su trabajo, tenemos que &lt;strong&gt;esperar a que termine&lt;/strong&gt;, y dice que prendamos el dispositivo.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prendemos el dispositivo&lt;/strong&gt;, y listo, ya está actualizado el firmware.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sat, 17 Nov 2012 23:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-11-17:blog/2012/nov/update-SE-NeoV-ICS-oficial-es.html</guid><category>Android</category><category>firmware</category><category>flashtool</category><category>Gingerbread</category><category>Ice Cream Sandwich</category><category>ICS</category><category>Neo V</category><category>Sony Ericsson</category><category>Xperia</category></item><item><title>JRE, JDK, Eclipse, PostgreSQL, DBeaver y Apache Tomcat en Fedora 17</title><link>http://chinosoliard.github.io/blog/2012/nov/JRE-JDK-Eclipse-PostgreSQL-DBeaver-Tomcat-on-fedora17-es.html</link><description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Descargamos &lt;a href="http://www.eclipse.org/downloads/"&gt;Eclipse IDE&lt;/a&gt;, &lt;a href="http://dbeaver.jkiss.org/download/"&gt;DBeaver&lt;/a&gt; y &lt;a href="http://tomcat.apache.org/download-70.cgi"&gt;Apache Tomcat 7&lt;/a&gt;, &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;JDK y JRE&lt;/a&gt; de sus respectivos sitios web&lt;/strong&gt;&lt;br /&gt;
  &lt;p&gt;En la facultad, trabajamos con la &lt;a href="http://www.eclipse.org/indigo/"&gt;version 3.7 (Indigo SR2)&lt;/a&gt; de Eclipse, aunque existen varias versiones, así que descargamos la versión que queramos, siempre acorde a la arquitectura de nuestro sistema operativo.&lt;/p&gt;
  &lt;p&gt;Descargamos tambien &lt;a href="http://dbeaver.jkiss.org/download/"&gt;DBeaver&lt;/a&gt;, en formato ZIP, correspondiente a la arquitectura de nuestro sistema operativo.&lt;/p&gt;
  &lt;p&gt;En el caso de &lt;a href="http://tomcat.apache.org/download-70.cgi"&gt;Tomcat&lt;/a&gt;, descargamos de “Core” el archivo tar.gz.&lt;/p&gt;
  &lt;p&gt;De la página oficial de &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;Oracle&lt;/a&gt;, descargamos los paquetes RPM de las últimas versiones de JRE y JDK disponibles.&lt;/p&gt;
  &lt;p&gt;Mientras se descargan estos paquetes, podemos continuar con los pasos siguientes.&lt;/p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos PostgreSQL server, y lo configuramos&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Para instalarlo, ejecutamos en una consola el siguiente comando:&lt;br /&gt;
&lt;code&gt;$ sudo yum install postgresql-server&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una vez instalado debemos iniciar los servicios, para ello ejecutamos en la consola:&lt;br /&gt;
&lt;code&gt;$ sudo service postgresql initdb&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;$ sudo service postgresql start&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después, cambiamos la contraseña del usuario postgres, con el siguiente comando en una consola:&lt;br /&gt;
&lt;code&gt;$ sudo passwd postgres&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, iniciamos sesión con el usuario postgres en una consola, usamos el comando “su” (Swich User, permite abrir una sesion con el ID de otro usuario):&lt;br /&gt;
&lt;code&gt;$ su postgres&lt;/code&gt;&lt;br /&gt;
&lt;em&gt;Debería aparecer un prompt “bash-4.1$”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora entramos a Postgres, escribiendo en ese prompt el comando “psql“:&lt;br /&gt;
&lt;code&gt;bash-4.2$ psql&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Procedemos a cambiar la contraseña, realizando la siguiente consulta en postgres=# , donde “CONTRASEÑA” es la misma que pusieron arriba:&lt;br /&gt;
&lt;code&gt;postgres=# ALTER USER postgres WITH PASSWORD 'CONTRASEÑA';&lt;/code&gt;&lt;br /&gt;
&lt;em&gt;Si todo salió bien debería aparecer “ALTER ROLE”.&lt;/em&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Salimos de Postgres:&lt;br /&gt;
&lt;code&gt;\q&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;y luego en el prompt “bash-4.1$“:&lt;br /&gt;
&lt;code&gt;exit&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora configuramos el puerto de PostgreSQL, ejecutamos en la consola el siguiente comando
  &lt;code&gt;$ sudo gedit /var/lib/pgsql/data/postgresql.conf&lt;/code&gt;&lt;br /&gt;
  Donde dice &lt;code&gt;#listen_addresses = ‘localhost'&lt;/code&gt;, lo cambiamos por &lt;code&gt;listen_addresses = ‘*'&lt;/code&gt;.&lt;br /&gt;
  Y en la línea que dice &lt;code&gt;#port = 5432&lt;/code&gt;, le quitamos el &lt;code&gt;#&lt;/code&gt;, debería quedar sólo &lt;code&gt;port = 5432&lt;/code&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora procedemos a configurar la configuración de autenticación, editando el archivo pg_hba.conf, ejecutamos en la consola el siguiente comando&lt;br /&gt;
&lt;code&gt;$ sudo gedit /var/lib/pgsql/data/pg_hba.conf&lt;/code&gt;&lt;br /&gt;
  Ubicamos la linea que dice &lt;code&gt;host all all 127.0.0.1/32 ident'&lt;/code&gt;, lo cambiamos por &lt;code&gt;host all all 127.0.0.1/32 md5&lt;/code&gt;.&lt;br /&gt;
  Con éste cambio le indicamos a PostgreSQL que las conexiones desde el mismo servidor (localhost) deben autenticarse por md5.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reiniciamos Postgres para que se realicen los cambios.&lt;br /&gt;
&lt;code&gt;sudo service postgresql restart&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos JRE (Java Runtime Environment)&lt;/strong&gt;&lt;br /&gt;
  En una consola, nos dirigimos al directorio donde descargamos el instalador de JRE, y ejecutamos los siguientes comandos:&lt;br /&gt;
&lt;code&gt;$ sudo rpm -ivh jre-7u?-linux-*.rpm&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;$ sudo /usr/sbin/alternatives --install /usr/bin/java java /usr/java/default/bin/java 20000&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos JDK (Java Development Kit)&lt;/strong&gt;&lt;br /&gt;
  Nos dirigimos al directorio donde se encuentra el instalador de JDK en una consola, y ejecutamos el comando a continuación:&lt;br /&gt;
&lt;code&gt;$ sudo rpm -ivh jdk-7u?-linux-*.rpm&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos Apache Tomcat 7&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;En una consola, nos dirigimos al directorio donde esta el archivo de Tomcat que descargamos.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutamos el siguiente comando para extraer los archivos:&lt;br /&gt;
&lt;code&gt;$ sudo tar -xvzf apache-tomcat-*.tar.gz&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después, movemos lo extraido a /usr/share/tomcat, con el comando que sigue, completando “*” con el nombre exacto de la carpeta&lt;br /&gt;
&lt;code&gt;$ sudo mv apache-tomcat-* /usr/share/tomcat&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, creamos el archivo necesario para que se identifique a tomcat como servicio, así podemos iniciarlo, reiniciarlo y detenerlo.&lt;br /&gt;
&lt;code&gt;$ sudo gedit /etc/init.d/tomcat&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dentro de ese archivo...&lt;br /&gt;
&lt;code&gt;
#!/bin/bash&lt;br /&gt;
# description: Tomcat Start Stop Restart&lt;br /&gt;
# processname: tomcat&lt;br /&gt;
# chkconfig: 234 20 80&lt;br /&gt;
JAVA_HOME=/usr/java/default/&lt;br /&gt;
export JAVA_HOME&lt;br /&gt;
PATH=$JAVA_HOME/bin:$PATH&lt;br /&gt;
export PATH&lt;br /&gt;
CATALINA_HOME=/usr/share/tomcat&lt;br /&gt;
case $1 in&lt;br /&gt;
start)&lt;br /&gt;
sh $CATALINA_HOME/bin/startup.sh&lt;br /&gt;
;;&lt;br /&gt;
stop)&lt;br /&gt;
sh $CATALINA_HOME/bin/shutdown.sh&lt;br /&gt;
;;&lt;br /&gt;
restart)&lt;br /&gt;
sh $CATALINA_HOME/bin/shutdown.sh&lt;br /&gt;
sh $CATALINA_HOME/bin/startup.sh&lt;br /&gt;
;;&lt;br /&gt;
esac&lt;br /&gt;
exit 0&lt;br /&gt;
&lt;/code&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;En donde dice &lt;code&gt;JAVA_HOME=/usr/java/default/&lt;/code&gt; se debe poner la ruta al programa que proporciona Java, para averiguarlo, en una consola ejecutan el comando:&lt;br /&gt;
&lt;code&gt;$ alternatives --config java&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Esto arroja un listado de los programas que aportan Java, y especifica cual es el que está por defecto. En mi caso, me listó lo siguiente:&lt;br /&gt;
&lt;code&gt;
Hay 2 programas que proporcionan 'java'.&lt;/br&gt;&lt;br /&gt;
Selección   Comando&lt;br /&gt;
-----------------------------------------------&lt;br /&gt;
 *+ 1      /usr/java/default/bin/java&lt;br /&gt;
 2 /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java&lt;/br&gt;&lt;br /&gt;
Presione Intro para mantener la selección actual[+], o escriba el número de la selección:
&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
&lt;em&gt;Fijensé que la ruta que aparece en el archivo no es la absoluta a Java (usr/java/default/bin/java), si no a el directorio home de Java (usr/java/default/)&lt;/em&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finalmente, ejecutamos los siguientes 3 comandos:&lt;br /&gt;
&lt;code&gt;$ sudo chmod 755 /etc/init.d/tomcat&lt;br /&gt;
      $ sudo chkconfig --add tomcat&lt;br /&gt;
      $ sudo chkconfig --level 234 tomcat on&lt;/code&gt;&lt;/br&gt;&lt;br /&gt;
y listo, ya podemos iniciar, detener y reiniciar tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos DBeaver&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Abrimos una consola y nos dirigimos al directorio donde descargamos el archivo zip de DBeaver  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extraemos los archivos con este comando:&lt;br /&gt;
&lt;code&gt;$ sudo unzip dbeaver-&lt;em&gt;-linux.gtk.&lt;/em&gt;.zip&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después lo movemos a /opt, con el comando a continuación:&lt;br /&gt;
&lt;code&gt;$ sudo mv dbeaver /opt/dbeaver&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Le damos los permisos correspondientes:&lt;br /&gt;
&lt;code&gt;$ sudo chmod -R +r /opt/dbeaver/&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creamos un ejecutable en el directorio /usr/bin, con los comandos próximos:&lt;br /&gt;
&lt;code&gt;$ sudo touch /usr/bin/dbeaver&lt;br /&gt;
$ sudo chmod 755 /usr/bin/dbeaver&lt;br /&gt;
$ sudo gedit /usr/bin/dbeaver&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Y en el archivo copiamos lo que esta a sucesor:&lt;br /&gt;
&lt;code&gt;xport DBEAVER_HOME="/opt/dbeaver"&lt;br /&gt;
$DBEAVER_HOME/dbeaver $*&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora, creamos el acceso directo en el menú de aplicaciones de GNOME&lt;br /&gt;
&lt;code&gt;$ sudo gedit /usr/share/applications/dbeaver.desktop&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Y copiamos el texto posterior
&lt;code&gt;[Desktop Entry]&lt;br /&gt;
Encoding=UTF-8&lt;br /&gt;
Name=DBeaver&lt;br /&gt;
Comment=Administrador de base de datos DBeaver&lt;br /&gt;
Exec=dbeaver&lt;br /&gt;
Icon=/opt/dbeaver/icon.xpm&lt;br /&gt;
Terminal=false&lt;br /&gt;
Type=Application&lt;br /&gt;
Categories=GNOME;Application;Development;&lt;br /&gt;
StartupNotify=true&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Y listo, ya tenemos instalado DBeaver en nuestro sistema  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalamos Eclipse IDE&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;En una consola, nos dirigimos al directorio donde descargamos el archivo tar.gz de Eclipse.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extraemos el contenido del archivo en /opt con el siguiente comando:&lt;br /&gt;
  &lt;code&gt;$ sudo tar -xvzf eclipse-&lt;em&gt;-linux-gtk-&lt;/em&gt;.tar.gz -C /opt&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Le damos permiso de lectura a todos los archivos con el comando a continuación:&lt;br /&gt;
  &lt;code&gt;$ sudo chmod -R +r /opt/eclipse&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creamos un ejecutable en el directorio /usr/bin:&lt;br /&gt;
  &lt;code&gt;$ sudo touch /usr/bin/eclipse&lt;br /&gt;
  $ sudo chmod 755 /usr/bin/eclipse&lt;br /&gt;
  $ sudo gedit /usr/bin/eclipse&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;y en el gedit copiar lo próximo:
  &lt;code&gt;export ECLIPSE_HOME="/opt/eclipse"&lt;br /&gt;
  $ECLIPSE_HOME/eclipse $*&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luego, creamos el archivo para hacer el acceso directo en el menú en GNOME:&lt;br /&gt;
  &lt;code&gt;$ sudo gedit /usr/share/applications/eclipse.desktop&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Y en el gedit copiamos el texto consecuente:&lt;br /&gt;
  &lt;code&gt;[Desktop Entry]&lt;br /&gt;
  Encoding=UTF-8&lt;br /&gt;
  Name=Eclipse&lt;br /&gt;
  Comment=Eclipse&lt;br /&gt;
  Exec=eclipse&lt;br /&gt;
  Icon=/opt/eclipse/icon.xpm&lt;br /&gt;
  Terminal=false&lt;br /&gt;
  Type=Application&lt;br /&gt;
  Categories=GNOME;Application;Development;&lt;br /&gt;
  StartupNotify=true&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 07 Nov 2012 23:15:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-11-07:blog/2012/nov/JRE-JDK-Eclipse-PostgreSQL-DBeaver-Tomcat-on-fedora17-es.html</guid><category>apache</category><category>database</category><category>db</category><category>dbeaver</category><category>eclipse</category><category>Fedora</category><category>GNU/Linux</category><category>java</category><category>Java Development Kit</category><category>Java Runtime Environment</category><category>jdk</category><category>jre</category><category>postgresql</category><category>sql</category><category>tomcat</category></item><item><title>Samsung printers on Fedora</title><link>http://chinosoliard.github.io/blog/2012/oct/samsung-printer-on-fedora-en.html</link><description>&lt;p&gt;The first (and no functional) option was install the &lt;a href="http://downloadcenter.samsung.com/content/DR/200911/20091118145015140/UnifiedLinuxDriver_1.01.tar.gz"&gt;Samsung Unified Linux Drivers&lt;/a&gt;, I executed the installer with “$ sudo” and start the installation. During the installation, it’s possible installing printers, I plug the ML-1640, and everything looks to be right. When I finished the installation, I go to CUPS page (&lt;a href="http://localhost:631/"&gt;http://localhost:631&lt;/a&gt;) and the printer were on the list. Among many details that I can’t remember, all I know is that the printer never worked, I searched the Internet and found that the package was very problematic, then I want to uninstall the package, for this, in a console run $ sudo / opt / Samsung / mfp / uninstall / guiuninstall, this will start the uninstallation. After a few steps, the program did not leave traces (or it seems).&lt;/p&gt;
&lt;p&gt;The second (and functional), and simpler, is installing Splix, a set of CUPS drivers that handle SPL (Samsung Printer Language). Following, I explain how I did.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Now is packaged for Fedora, so, all you have to do to install the package is run in a console 
  &lt;code&gt;$ sudo yum install splix&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;After installing Splix, just connect the printer (windows appear to install drivers, but cancel) and go to CUPS (http://localhost:631), once in CUPS, we go to Administration, and then to “Add printer “.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The printer appears connected in the list of local printers, select it and press “next”. 
&lt;a href="/images/article/2012/10/samsung-printer-on-fedora-1.png"&gt;&lt;img alt="samsung-printer-on-fedora-1" src="/images/article/2012/10/samsung-printer-on-fedora-1.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After, configurations for printer name, description, location, and the option of sharing appears; We click on “next” (after set the fields to taste).
&lt;a href="/images/article/2012/10/samsung-printer-on-fedora-2.png"&gt;&lt;img alt="samsung-printer-on-fedora-2" src="/images/article/2012/10/samsung-printer-on-fedora-2.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We got to the step where we define the controller, in the list “Model” select the model you are installing, then “Add Printer”.
&lt;a href="/images/article/2012/10/samsung-printer-on-fedora-3.png"&gt;&lt;img alt="samsung-printer-on-fedora-3" src="/images/article/2012/10/samsung-printer-on-fedora-3.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, we are asked to establish the default options for the printer
&lt;a href="/images/article/2012/10/samsung-printer-on-fedora-4.png"&gt;&lt;img alt="samsung-printer-on-fedora-4" src="/images/article/2012/10/samsung-printer-on-fedora-4.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once we are in the printer’s page in CUPS, we can test the printer selecting “Print Test Page” in the “Maintenance” menu.
&lt;a href="/images/article/2012/10/samsung-printer-on-fedora-5.png"&gt;&lt;img alt="samsung-printer-on-fedora-5" src="/images/article/2012/10/samsung-printer-on-fedora-5.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The printer is working, but, to me personally, four printers appear installed on the CUPS printer list, so I removed the ones I didn’t install (detected by the name).
&lt;a href="/images/article/2012/10/samsung-printer-on-fedora-6.png"&gt;&lt;img alt="samsung-printer-on-fedora-6" src="/images/article/2012/10/samsung-printer-on-fedora-6.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Well, that’s the simply way to install the printers, I hope you have been useful.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Sun, 21 Oct 2012 19:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-10-21:blog/2012/oct/samsung-printer-on-fedora-en.html</guid><category>CLP-315</category><category>CUPS</category><category>Fedora</category><category>GNU/Linux</category><category>printer</category><category>ML-1640</category><category>samsung</category><category>Samsung Unified Linux Driver</category><category>SPLIX</category></item><item><title>New project = Airlife100.com.ar</title><link>http://chinosoliard.github.io/blog/2012/sep/project-airlife100comar-en.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Fri, 28 Sep 2012 00:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-09-28:blog/2012/sep/project-airlife100comar-en.html</guid><category>Airlife100</category><category>Android</category><category>project</category></item><item><title>CyanogenMod 7.2.2 en Motorola Milestone</title><link>http://chinosoliard.github.io/blog/2012/sep/motorola-milestone-cyanogenmod-722-es.html</link><description>&lt;p&gt;Para empezar, aclaro que hay que tener cuidado a la hora de hacer este tipo de trabajos, y siempre hay que tener la &lt;strong&gt;batería cargada&lt;/strong&gt;. Tambien, el celular debe estar en con la versión oficial  de Android 2.2 de Motorola.  &lt;/p&gt;
&lt;p&gt;Listo los archivos que se van a necesitar, así los descargas de antemano y no hay contratiempos:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deE4L" title="OpenRecovery 1.46"&gt;OpenRecovery 1.46&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deE5G" title="Vulnerable Recovery for Milestone"&gt;Vulnerable Recovery para Milestone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Drivers Motorola (&lt;a href="http://adf.ly/deE6O"&gt;32-bits&lt;/a&gt; o &lt;a href="http://adf.ly/deE7R"&gt;64-bits&lt;/a&gt;, dependiendo de tu sistema operativo).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deE8f" title="RDSLite 5.7"&gt;RSDLite 5.7.&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deEAA"&gt;La última versión de CyanogenMod disponible&lt;/a&gt; (Actualmente 7.2.2).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adf.ly/deEBE"&gt;Google Apps&lt;/a&gt; (Ultima versión 2011-12-16). (Podés fijarte &lt;a href="http://android.doshska.net/cm7"&gt;acá&lt;/a&gt; si hay una nueva versión).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora, vamos a lo nuestro...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Preparar OpenRecovery&lt;/strong&gt;&lt;br /&gt;
  OpenRecovery son herramientas para la gestión del equipo y del sistema operativo, el cual vas a usar para restaurar el celular a fabrica, actualizarlo y, básicamente, todos los pasos a seguir.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Descarga &lt;a href="http://adf.ly/deE4L"&gt;OpenRecovery 1.46&lt;/a&gt;, y lo descomprimís en el directorio raíz  de la tarjeta MicroSD del equipo. (Esta es la ultima versión del OR hasta la fecha, y tiene anidados modulos y librerías, para el manejo de la tarjeta MicroSD, disposición del teclado, bandas de funcionamiento, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ahora deberías tener una carpeta “OpenRecovery” y un archivo “update.zip” en tu tarjeta MicroSD.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalar el “Vulnerable Recovery”&lt;/strong&gt;&lt;br /&gt;
  El “Vulnerable Recovery” no cambia nada en el sistema del dispositivo, solo flashea la partición de recuperación original, permitiendo que se ejecute el OpenRecovery desde la MicroSD.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Descarga “Vulnerable Recovery”, los drivers (depende si tu sistema operativo es 32-bits o 64-bits) y RSDLite. Instala primero los drivers y luego RSDLite.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apaga el teléfono, y lo encendes en modo Bootloader, para esto, lo apagas y apretás la tecla de arriba (del teclado qwerty, no la de volumen) mientras presionas la tecla de encendido.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Conectás el Milestone a la computadora y esperas que Windows instale los drivers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutá RSDLite, y el dispositivo debería estar aparecer en la lista (S Flash OMAP3430) como “conected”.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elegí el archivo sbf del vulnerable recovery haciendo clic en el botón “…” que aparece arriba.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; Cuando el teléfono se reinicie luego de empezar el proceso de flasheo, es MUY recomendable que no llegue a iniciar android, e inicie Open Recovery. Para esto hay que mantener el botón de la cámara presionado mientras el equipo se reinicia, hasta que aparezca un triangulo.&lt;br /&gt;
Haz clic en el botón “start” y espera a que el teléfono reinicie. Acordate de mantener el botón de la cámara precionado cuando esto pase.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cuando el dispositivo haya iniciado Open Recovery, RSDLite no va a haber terminado (y nunca lo va a hacer), ignora cualquier cartel de advertencia y cerralo, ya está listo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalar OpenRecovery&lt;/strong&gt;&lt;br /&gt;
  NOTA:Todas las veces que quieras inicar el equipo en modo recovery debes mantener el botón de la cámara junto con el de encendido.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Cuando el triangulo aparezca, mantené presionado el botón de subir el volumen y apretás el botón de la cámara. Con esto, accedes al recovery actual, es decir, el que trae Motorola Milestone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Para terminar de instalar OpenRecovery, tenés que seleccionar “apply sdcard:update.zip”. (La navegación por el menú es con las direcciones del teclado qwerty y el botón del medio actúa como ENTER).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Después de un rato, verás que el menú cambió. Ahora, inclusive, puedes moverte con las teclas de volumen, y el botón de la cámara hace de ENTER.&lt;br /&gt;
Debería verse algo como la siguiente imagen:&lt;br /&gt;
&lt;center&gt;&lt;img alt="OpenRecovery" src="http://2.bp.blogspot.com/_8HmrfJJQrGw/TSMoFnnO3ZI/AAAAAAAAA8M/9agds36If-U/s1600/xt720%2Bopenrecovery.png" title="OpenRecovery" /&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En el punto 2.6, dije que no convenía que el teléfono iniciara Android, la razón es porque Motorola instala un script que instala el recovery original, este se ejecuta cada vez que se inicia Android.&lt;br /&gt;
Para eliminarlo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ejecutamos la consola (“console”) de OpenRecovery&lt;/li&gt;
&lt;li&gt;Ejecutamos el comando “rm -f /system/etc/install-recovery.sh”&lt;/li&gt;
&lt;li&gt;Ahora ejecutamos “exit” para salir, y listo.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Particion para Aplicaciones (Opcional)&lt;/strong&gt;&lt;br /&gt;
  A pesar de ser un paso opcional, es recomandado hacerlo, aumenta el espacio para instalar aplicaciones de tu teléfono.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt; Siempre que quieras cambiar la disposición de teclado de OpenRecovery, tenés que ir a “settings/Keyboard Layout” y cambiarlo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para hacer esto, necesitas: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Más de 1GB, ya que la particion que vamos a hacer es de 1GB, y necesitas para los demás datos.&lt;/li&gt;
&lt;li&gt;Conocimientos básicos sobre Linux y particiones.&lt;/li&gt;
&lt;li&gt;Un backup de los datos de la SD (por si no se cumple muy bien el punto anterior).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dentro del menú de OpenRecovery, nos vamos a la consola (“console”). Ahí:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Desmontamos la tarjeta con el comando “umount /sdcard”.&lt;/li&gt;
&lt;li&gt;Iniciamos el editor de particiones parted con el comando “parted /dev/block/mmcblk0”.&lt;br /&gt;
&lt;strong&gt;IMPORTANTE:&lt;/strong&gt; Dentro de parted la tecla borrar NO FUNCIONA, así que tené mucho cuidado con lo que escribes.  &lt;/li&gt;
&lt;li&gt;Listá la tabla de particiones de tu MicroSD con el comando “print”&lt;br /&gt;
Deberías ver algo como la imagen siguiente:&lt;br /&gt;
Es importante que anotes el tamaño exacto de la tarjeta. Verás “Disk /dev/block/mmcblk0: XXXXMB”, esos XXXXMB son el tamaño exacto de la tarjeta.&lt;/li&gt;
&lt;li&gt;Redimensiona la partición FAT32 para dejar 1GB libre (1024MB). En el caso de la imagen, la partición sería 7969MB – 1024MB = 6945MB.&lt;br /&gt;
Para hacerlo, ejecuta el comando “resize 1 0MB 6945MB”, donde:&lt;ul&gt;
&lt;li&gt;1 es el número de partición.&lt;/li&gt;
&lt;li&gt;0MB es donde comenzaría la partición.&lt;/li&gt;
&lt;li&gt;6945MB es donde terminaría la partición.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Creá la particion ext2 usando los 1024MB que quedaron libres al final de la partición en el paso anterior.
Usa el comando “mkpartfs primary ext2 6945MB 7969MB”, donde:&lt;ul&gt;
&lt;li&gt;“primary” es el tipo de partición.&lt;/li&gt;
&lt;li&gt;“ext2” es el sistema de archivos.&lt;/li&gt;
&lt;li&gt;6945MB es donde comenzaría la partición.&lt;/li&gt;
&lt;li&gt;7969MB es donde terminaría la partición.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Listá nuevamente las particiones, para corroborar que todo haya salido bien, esto con el comando “print”.&lt;br /&gt;
   Debería verse algo parecido a la imagen siguiente.&lt;/li&gt;
&lt;li&gt;Si todo salió bien, con el comando “quit” salimos de parted.&lt;/li&gt;
&lt;li&gt;Convertimos la particion ext2 a ext3, usando el comando “tune2fs -j /dev/block/mmcblk0p2”.&lt;/li&gt;
&lt;li&gt;Todo listo, salimos de la consola con el comando “exit”.&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt; Durante el uso del teléfono, no se podrá admirar el espacio, pero cuando instalas aplicaciones, veras que no disminuye el espacio ocupado por esta.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Instalar CyanogenMod&lt;/strong&gt;&lt;br /&gt;
  El último paso es instalar CyanogenMod. Una vez que tengás &lt;a href="http://adf.ly/deEAA"&gt;la última versión descargada&lt;/a&gt; y las &lt;a href="http://adf.ly/deEBE"&gt;Google Apps&lt;/a&gt;,los pasos a seguir son:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Iniciar el equipo en OpenRecovery.&lt;/li&gt;
&lt;li&gt;Elige “Wipe Dalvik cache”.&lt;/li&gt;
&lt;li&gt;Luego, elige “Wipe data / Factory Reset” (te apareceran como 9 “no” y 1 “yes”, esto es por seguridad, dale al “yes”, obvio).&lt;/li&gt;
&lt;li&gt;Ahora selecciona “Wipe cache partition”.&lt;/li&gt;
&lt;li&gt;Te vas a “Apply update” y seleccionas el archivo de Cyanogen que descargaste. (Existen otros test-*, que son solo pruebas y muestras, si te molestan los borras).&lt;/li&gt;
&lt;li&gt;Después seleccionas las Google Apps, tambien en el menu de “Apply update”.&lt;/li&gt;
&lt;li&gt;Volvés al menú principal de OpenRecovery, seleccionas “Reboot System” y listo.&lt;/li&gt;
&lt;li&gt;Lo dejás iniciar CyanogenMod, la primera vez demora un poco más de lo normal.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Actualizar CyanogenMod&lt;/strong&gt;
  Es recomendable mantener CyanogenMod actualizado, de vez en cuando fijate si hay una versión nueva, y para actualizar, los pasos son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Iniciar el teléfono en OpenRecovery.&lt;/li&gt;
&lt;li&gt;Selecciona “Wipe Cache partition”.&lt;/li&gt;
&lt;li&gt;Selecciona “Wipe Dalvik cache”.&lt;/li&gt;
&lt;li&gt;Instala la actualización desde “Apply Update”.&lt;/li&gt;
&lt;li&gt;Reinicia el equipo, y estará iniciando la nueva versión de Cyanogen (Toma más tiempo de lo normal).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Espero les haya servido&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 26 Sep 2012 21:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-09-26:blog/2012/sep/motorola-milestone-cyanogenmod-722-es.html</guid><category>Android</category><category>CyanogenMod</category><category>Gingerbread</category><category>Milestone</category><category>Motorola</category></item><item><title>Programmer Day</title><link>http://chinosoliard.github.io/blog/2012/sep/programmer-day-2012-en.html</link><description>&lt;p&gt;&lt;strong&gt;Why the day 256?&lt;/strong&gt;&lt;br /&gt;
It was chosen because it is the number of different combinations that can be represented with 8 bits, number well known among programmers. It is also the largest power of 2 less than 365, the number of days a year.&lt;br /&gt;
&lt;center&gt;&lt;img alt="ProgrammerDay" src="http://www.programmerday.info/images/header.jpg" title="ProgrammerDay" /&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the Universe trying to produce bigger and better idiots. So far, the Universe is winning. - Rick Cook  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Happy programmer day!&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 12 Sep 2012 14:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-09-12:blog/2012/sep/programmer-day-2012-en.html</guid><category>misc</category></item><item><title>Dirty computers, dust inside</title><link>http://chinosoliard.github.io/blog/2012/sep/dirty-computer-dust-inside-en.html</link><description>&lt;p&gt;Cleaning the inside of the CPU is something that should be done routinely to prevent problems become greater, because when dust accumulates, it is only a matter of moisture to a short circuit, for example.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">chinosoliard</dc:creator><pubDate>Wed, 05 Sep 2012 14:00:00 -0300</pubDate><guid>tag:chinosoliard.github.io,2012-09-05:blog/2012/sep/dirty-computer-dust-inside-en.html</guid><category>maintenance</category></item></channel></rss>